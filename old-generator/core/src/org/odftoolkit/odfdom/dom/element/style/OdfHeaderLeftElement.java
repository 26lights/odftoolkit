/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.style;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;
import org.odftoolkit.odfdom.dom.type.OdfBoolean;

import org.odftoolkit.odfdom.dom.element.text.OdfChangedRegionElement;
import org.odftoolkit.odfdom.dom.element.text.OdfVariableDeclElement;
import org.odftoolkit.odfdom.dom.type.office.OdfValueType;
import org.odftoolkit.odfdom.dom.element.text.OdfSequenceDeclElement;
import org.odftoolkit.odfdom.dom.element.text.OdfUserFieldDeclElement;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.datatype.Duration;
import org.odftoolkit.odfdom.dom.element.text.OdfDdeConnectionDeclElement;
import org.odftoolkit.odfdom.dom.element.text.OdfAlphabeticalIndexAutoMarkFileElement;
import org.odftoolkit.odfdom.dom.element.text.OdfHeadingElement;
import org.odftoolkit.odfdom.dom.element.text.OdfParagraphElement;
import org.odftoolkit.odfdom.dom.element.text.OdfListElement;
import org.odftoolkit.odfdom.dom.element.table.OdfTableElement;
import org.odftoolkit.odfdom.dom.element.text.OdfSectionElement;
import org.odftoolkit.odfdom.dom.type.text.OdfSectionDisplayType;
import org.odftoolkit.odfdom.dom.element.text.OdfTableOfContentElement;
import org.odftoolkit.odfdom.dom.element.text.OdfIllustrationIndexElement;
import org.odftoolkit.odfdom.dom.element.text.OdfTableIndexElement;
import org.odftoolkit.odfdom.dom.element.text.OdfObjectIndexElement;
import org.odftoolkit.odfdom.dom.element.text.OdfUserIndexElement;
import org.odftoolkit.odfdom.dom.element.text.OdfAlphabeticalIndexElement;
import org.odftoolkit.odfdom.dom.element.text.OdfBibliographyElement;
import org.odftoolkit.odfdom.dom.element.text.OdfIndexTitleElement;

/**
 * ODF DOM Element implementation for element "<style:header-left>".
 */
public abstract class OdfHeaderLeftElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.STYLE, "header-left" );

    public OdfHeaderLeftElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
     * Get value of attribute "style:display".
     */
    public Boolean getDisplay()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "display" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "true";
        }

        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "style:display".
     */
    public void setDisplay( Boolean _aDisplay )
    {                    
        String aStringVal = OdfBoolean.toString( _aDisplay );
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "display" ), aStringVal );
    }

    /**
    * Create child element "text:changed-region".
    */
    public OdfChangedRegionElement createChangedRegionElement()
    {
        OdfChangedRegionElement  _nChangedRegion = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfChangedRegionElement.class);
        this.appendChild( _nChangedRegion);
        return  _nChangedRegion;
    }                   
               
    /**
    * Create child element "text:variable-decl".
    */
    public OdfVariableDeclElement createVariableDeclElement(String   _aName, OdfValueType   _aValueType)
    {
        OdfVariableDeclElement  _nVariableDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfVariableDeclElement.class);
        _nVariableDecl.setName( _aName);
        _nVariableDecl.setValueType( _aValueType);
        this.appendChild( _nVariableDecl);
        return  _nVariableDecl;      
    }
    
    /**
    * Create child element "text:sequence-decl".
    */
    public OdfSequenceDeclElement createSequenceDeclElement(String   _aName, Integer   _aDisplayOutlineLevel)
    {
        OdfSequenceDeclElement  _nSequenceDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSequenceDeclElement.class);
        _nSequenceDecl.setName( _aName);
        _nSequenceDecl.setDisplayOutlineLevel( _aDisplayOutlineLevel);
        this.appendChild( _nSequenceDecl);
        return  _nSequenceDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, Double   _aValue, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setValue( _aValue);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, XMLGregorianCalendar   _aDateValue, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setDateValue( _aDateValue);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, Duration   _aTimeValue, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setTimeValue( _aTimeValue);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, Boolean   _aBooleanValue, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setBooleanValue( _aBooleanValue);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:dde-connection-decl".
    */
    public OdfDdeConnectionDeclElement createDdeConnectionDeclElement(String   _aName, String   _aDdeApplication, String   _aDdeTopic, String   _aDdeItem)
    {
        OdfDdeConnectionDeclElement  _nDdeConnectionDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDdeConnectionDeclElement.class);
        _nDdeConnectionDecl.setName( _aName);
        _nDdeConnectionDecl.setDdeApplication( _aDdeApplication);
        _nDdeConnectionDecl.setDdeTopic( _aDdeTopic);
        _nDdeConnectionDecl.setDdeItem( _aDdeItem);
        this.appendChild( _nDdeConnectionDecl);
        return  _nDdeConnectionDecl;      
    }
    
    /**
    * Create child element "text:alphabetical-index-auto-mark-file".
    */
    public OdfAlphabeticalIndexAutoMarkFileElement createAlphabeticalIndexAutoMarkFileElement(String   _aHref)
    {
        OdfAlphabeticalIndexAutoMarkFileElement  _nAlphabeticalIndexAutoMarkFile = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAlphabeticalIndexAutoMarkFileElement.class);
        _nAlphabeticalIndexAutoMarkFile.setHref( _aHref);
        this.appendChild( _nAlphabeticalIndexAutoMarkFile);
        return  _nAlphabeticalIndexAutoMarkFile;      
    }
    
    /**
    * Create child element "text:h".
    */
    public OdfHeadingElement createHeadingElement(Integer   _aOutlineLevel)
    {
        OdfHeadingElement  _nHeading = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfHeadingElement.class);
        _nHeading.setOutlineLevel( _aOutlineLevel);
        this.appendChild( _nHeading);
        return  _nHeading;      
    }
    
    /**
    * Create child element "text:p".
    */
    public OdfParagraphElement createParagraphElement()
    {
        OdfParagraphElement  _nParagraph = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfParagraphElement.class);
        this.appendChild( _nParagraph);
        return  _nParagraph;
    }                   
               
    /**
    * Create child element "text:list".
    */
    public OdfListElement createListElement()
    {
        OdfListElement  _nList = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfListElement.class);
        this.appendChild( _nList);
        return  _nList;
    }                   
               
    /**
    * Create child element "table:table".
    */
    public OdfTableElement createTableElement()
    {
        OdfTableElement  _nTable = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableElement.class);
        this.appendChild( _nTable);
        return  _nTable;
    }                   
               
    /**
    * Create child element "text:section".
    */
    public OdfSectionElement createSectionElement(String   _aName, OdfSectionDisplayType   _aDisplay)
    {
        OdfSectionElement  _nSection = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSectionElement.class);
        _nSection.setName( _aName);
        _nSection.setDisplay( _aDisplay);
        this.appendChild( _nSection);
        return  _nSection;      
    }
    
    /**
    * Create child element "text:section".
    */
    public OdfSectionElement createSectionElement(OdfSectionDisplayType   _aDisplay, String   _aCondition, String   _aName)
    {
        OdfSectionElement  _nSection = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSectionElement.class);
        _nSection.setDisplay( _aDisplay);
        _nSection.setCondition( _aCondition);
        _nSection.setName( _aName);
        this.appendChild( _nSection);
        return  _nSection;      
    }
    
    /**
    * Create child element "text:table-of-content".
    */
    public OdfTableOfContentElement createTableOfContentElement(String   _aName)
    {
        OdfTableOfContentElement  _nTableOfContent = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableOfContentElement.class);
        _nTableOfContent.setName( _aName);
        this.appendChild( _nTableOfContent);
        return  _nTableOfContent;      
    }
    
    /**
    * Create child element "text:illustration-index".
    */
    public OdfIllustrationIndexElement createIllustrationIndexElement(String   _aName)
    {
        OdfIllustrationIndexElement  _nIllustrationIndex = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfIllustrationIndexElement.class);
        _nIllustrationIndex.setName( _aName);
        this.appendChild( _nIllustrationIndex);
        return  _nIllustrationIndex;      
    }
    
    /**
    * Create child element "text:table-index".
    */
    public OdfTableIndexElement createTableIndexElement(String   _aName)
    {
        OdfTableIndexElement  _nTableIndex = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableIndexElement.class);
        _nTableIndex.setName( _aName);
        this.appendChild( _nTableIndex);
        return  _nTableIndex;      
    }
    
    /**
    * Create child element "text:object-index".
    */
    public OdfObjectIndexElement createObjectIndexElement(String   _aName)
    {
        OdfObjectIndexElement  _nObjectIndex = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfObjectIndexElement.class);
        _nObjectIndex.setName( _aName);
        this.appendChild( _nObjectIndex);
        return  _nObjectIndex;      
    }
    
    /**
    * Create child element "text:user-index".
    */
    public OdfUserIndexElement createUserIndexElement(String   _aName)
    {
        OdfUserIndexElement  _nUserIndex = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserIndexElement.class);
        _nUserIndex.setName( _aName);
        this.appendChild( _nUserIndex);
        return  _nUserIndex;      
    }
    
    /**
    * Create child element "text:alphabetical-index".
    */
    public OdfAlphabeticalIndexElement createAlphabeticalIndexElement(String   _aName)
    {
        OdfAlphabeticalIndexElement  _nAlphabeticalIndex = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAlphabeticalIndexElement.class);
        _nAlphabeticalIndex.setName( _aName);
        this.appendChild( _nAlphabeticalIndex);
        return  _nAlphabeticalIndex;      
    }
    
    /**
    * Create child element "text:bibliography".
    */
    public OdfBibliographyElement createBibliographyElement(String   _aName)
    {
        OdfBibliographyElement  _nBibliography = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfBibliographyElement.class);
        _nBibliography.setName( _aName);
        this.appendChild( _nBibliography);
        return  _nBibliography;      
    }
    
    /**
    * Create child element "text:index-title".
    */
    public OdfIndexTitleElement createIndexTitleElement(String   _aName)
    {
        OdfIndexTitleElement  _nIndexTitle = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfIndexTitleElement.class);
        _nIndexTitle.setName( _aName);
        this.appendChild( _nIndexTitle);
        return  _nIndexTitle;      
    }
    
    /**
    * Create child element "style:region-left".
    */
    public OdfRegionLeftElement createRegionLeftElement()
    {
        OdfRegionLeftElement  _nRegionLeft = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfRegionLeftElement.class);
        this.appendChild( _nRegionLeft);
        return  _nRegionLeft;
    }                   
               
    /**
    * Create child element "style:region-center".
    */
    public OdfRegionCenterElement createRegionCenterElement()
    {
        OdfRegionCenterElement  _nRegionCenter = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfRegionCenterElement.class);
        this.appendChild( _nRegionCenter);
        return  _nRegionCenter;
    }                   
               
    /**
    * Create child element "style:region-right".
    */
    public OdfRegionRightElement createRegionRightElement()
    {
        OdfRegionRightElement  _nRegionRight = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfRegionRightElement.class);
        this.appendChild( _nRegionRight);
        return  _nRegionRight;
    }                   
               
}
