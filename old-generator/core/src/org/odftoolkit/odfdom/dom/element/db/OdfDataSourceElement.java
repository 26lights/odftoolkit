/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.db;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;

;

/**
 * ODF DOM Element implementation for element "<db:data-source>".
 */
public abstract class OdfDataSourceElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.DB, "data-source" );

    public OdfDataSourceElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
    * Create child element "db:connection-data".
    */
    public OdfConnectionDataElement createConnectionDataElement()
    {
        OdfConnectionDataElement  _nConnectionData = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfConnectionDataElement.class);
        this.appendChild( _nConnectionData);
        return  _nConnectionData;
    }                   
               
    /**
    * Create child element "db:driver-settings".
    */
    public OdfDriverSettingsElement createDriverSettingsElement()
    {
        OdfDriverSettingsElement  _nDriverSettings = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDriverSettingsElement.class);
        this.appendChild( _nDriverSettings);
        return  _nDriverSettings;
    }                   
               
    /**
    * Create child element "db:application-connection-settings".
    */
    public OdfApplicationConnectionSettingsElement createApplicationConnectionSettingsElement()
    {
        OdfApplicationConnectionSettingsElement  _nApplicationConnectionSettings = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfApplicationConnectionSettingsElement.class);
        this.appendChild( _nApplicationConnectionSettings);
        return  _nApplicationConnectionSettings;
    }                   
               
}
