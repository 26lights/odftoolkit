/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.draw;

import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.dom.element.OdfElement;
import org.odftoolkit.odfdom.dom.type.OdfStyleName;
import org.odftoolkit.odfdom.dom.type.draw.OdfHatchStyleType;


/**
 * ODF DOM Element implementation for element "<draw:hatch>".
 */
public abstract class OdfHatchElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.DRAW, "hatch" );

    public OdfHatchElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialize mandatory attributes.
     */
    public void init(String _aName, OdfHatchStyleType _aStyle)
    {
        setName( _aName );
        setStyle( _aStyle );
    }

    /**
     * Get value of attribute "draw:name".
     */
    public String getName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:name".
     */
    public void setName( String _aName )
    {                    
        String aStringVal = OdfStyleName.toString( _aName );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "name" ), aStringVal );
    }

    /**
     * Get value of attribute "draw:display-name".
     */
    public String getDisplayName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "display-name" ) );
    }

    /**
     * Set value of attribute "draw:display-name".
     */
    public void setDisplayName( String _aDisplayName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "display-name" ), _aDisplayName );
    }

    /**
     * Get value of attribute "draw:style".
     */
    public OdfHatchStyleType getStyle()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "style" ) );
        return OdfHatchStyleType.enumValueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:style".
     */
    public void setStyle( OdfHatchStyleType _aStyle )
    {                    
        String aStringVal = OdfHatchStyleType.toString( _aStyle );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "style" ), aStringVal );
    }

    /**
     * Get value of attribute "draw:color".
     */
    public String getColor()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "color" ) );
    }

    /**
     * Set value of attribute "draw:color".
     */
    public void setColor( String _aColor )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "color" ), _aColor );
    }

    /**
     * Get value of attribute "draw:distance".
     */
    public String getDistance()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "distance" ) );
    }

    /**
     * Set value of attribute "draw:distance".
     */
    public void setDistance( String _aDistance )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "distance" ), _aDistance );
    }

    /**
     * Get value of attribute "draw:rotation".
     */
    public Integer getRotation()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "rotation" ) );
        return Integer.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:rotation".
     */
    public void setRotation( Integer _aRotation )
    {                    
        String aStringVal = Integer.toString( _aRotation );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "rotation" ), aStringVal );
    }

}
