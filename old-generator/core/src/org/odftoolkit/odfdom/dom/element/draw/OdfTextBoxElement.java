/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.draw;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;
import org.odftoolkit.odfdom.dom.type.OdfNonNegativeLength;
import org.odftoolkit.odfdom.dom.type.OdfId;


/**
 * ODF DOM Element implementation for element "<draw:text-box>".
 */
public abstract class OdfTextBoxElement extends OdfElement
{        
    /**
	 * 
	 */
	private static final long serialVersionUID = 5035389749395798297L;
	public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.DRAW, "text-box" );

    public OdfTextBoxElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    @Override
	public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
     * Get value of attribute "draw:chain-next-name".
     */
    public String getChainNextName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "chain-next-name" ) );
    }

    /**
     * Set value of attribute "draw:chain-next-name".
     */
    public void setChainNextName( String _aChainNextName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "chain-next-name" ), _aChainNextName );
    }

    /**
     * Get value of attribute "draw:corner-radius".
     */
    public String getCornerRadius()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "corner-radius" ) );
        return OdfNonNegativeLength.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:corner-radius".
     */
    public void setCornerRadius( String _aCornerRadius )
    {                    
        String aStringVal = OdfNonNegativeLength.toString( _aCornerRadius );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "corner-radius" ), aStringVal );
    }

    /**
     * Get value of attribute "fo:min-height".
     */
    public String getMinHeight()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.FO, "min-height" ) );
    }

    /**
     * Set value of attribute "fo:min-height".
     */
    public void setMinHeight( String _aMinHeight )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.FO, "min-height" ), _aMinHeight );
    }

    /**
     * Get value of attribute "fo:min-width".
     */
    public String getMinWidth()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.FO, "min-width" ) );
    }

    /**
     * Set value of attribute "fo:min-width".
     */
    public void setMinWidth( String _aMinWidth )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.FO, "min-width" ), _aMinWidth );
    }

    /**
     * Get value of attribute "fo:max-height".
     */
    public String getMaxHeight()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.FO, "max-height" ) );
    }

    /**
     * Set value of attribute "fo:max-height".
     */
    public void setMaxHeight( String _aMaxHeight )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.FO, "max-height" ), _aMaxHeight );
    }

    /**
     * Get value of attribute "fo:max-width".
     */
    public String getMaxWidth()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.FO, "max-width" ) );
    }

    /**
     * Set value of attribute "fo:max-width".
     */
    public void setMaxWidth( String _aMaxWidth )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.FO, "max-width" ), _aMaxWidth );
    }

    /**
     * Get value of attribute "text:id".
     */
    public String getId()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "id" ) );
    }

    /**
     * Set value of attribute "text:id".
     */
    public void setId( String _aId )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "id" ), _aId );
    }

    /**
     * Get value of attribute "xml:id".
     */
    public String getXmlid()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.XML, "id" ) );
        return OdfId.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "xml:id".
     */
    public void setXmlid( String _aXmlid )
    {                    
        String aStringVal = OdfId.toString( _aXmlid );
        setOdfAttribute( OdfName.get( OdfNamespace.XML, "id" ), aStringVal );
    }

}
