/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.table;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.style.OdfStyleFamily;
import org.odftoolkit.odfdom.dom.element.OdfStylableElement;
import org.odftoolkit.odfdom.dom.type.OdfStyleName;
import org.odftoolkit.odfdom.dom.type.OdfBoolean;
import org.odftoolkit.odfdom.dom.type.OdfAnyURI;
import org.odftoolkit.odfdom.dom.type.OdfCellRangeAddressList;
import org.odftoolkit.odfdom.dom.type.OdfId;

import org.odftoolkit.odfdom.dom.element.office.OdfDdeSourceElement;
import org.odftoolkit.odfdom.dom.element.form.OdfFormElement;
import org.odftoolkit.odfdom.dom.element.xforms.OdfModelElement;
import org.odftoolkit.odfdom.dom.element.text.OdfSoftPageBreakElement;

/**
 * ODF DOM Element implementation for element "<table:table>".
 */
public abstract class OdfTableElement extends OdfStylableElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.TABLE, "table" );

    public OdfTableElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME, OdfStyleFamily.Table, OdfName.get( OdfNamespace.TABLE, "style-name" ) );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
     * Get value of attribute "table:name".
     */
    public String getName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "name" ) );
    }

    /**
     * Set value of attribute "table:name".
     */
    public void setName( String _aName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "name" ), _aName );
    }

    /**
     * Get value of attribute "table:style-name".
     */
    public String getStyleName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "style-name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:style-name".
     */
    public void setStyleName( String _aStyleName )
    {                    
        String aStringVal = OdfStyleName.toString( _aStyleName );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "style-name" ), aStringVal );
    }

    /**
     * Get value of attribute "table:template-name".
     */
    public String getTemplateName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "template-name" ) );
    }

    /**
     * Set value of attribute "table:template-name".
     */
    public void setTemplateName( String _aTemplateName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "template-name" ), _aTemplateName );
    }

    /**
     * Get value of attribute "table:use-first-row-styles".
     */
    public Boolean getUseFirstRowStyles()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-first-row-styles" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:use-first-row-styles".
     */
    public void setUseFirstRowStyles( Boolean _aUseFirstRowStyles )
    {                    
        String aStringVal = OdfBoolean.toString( _aUseFirstRowStyles );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-first-row-styles" ), aStringVal );
    }

    /**
     * Get value of attribute "table:use-last-row-styles".
     */
    public Boolean getUseLastRowStyles()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-last-row-styles" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:use-last-row-styles".
     */
    public void setUseLastRowStyles( Boolean _aUseLastRowStyles )
    {                    
        String aStringVal = OdfBoolean.toString( _aUseLastRowStyles );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-last-row-styles" ), aStringVal );
    }

    /**
     * Get value of attribute "table:use-first-column-styles".
     */
    public Boolean getUseFirstColumnStyles()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-first-column-styles" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:use-first-column-styles".
     */
    public void setUseFirstColumnStyles( Boolean _aUseFirstColumnStyles )
    {                    
        String aStringVal = OdfBoolean.toString( _aUseFirstColumnStyles );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-first-column-styles" ), aStringVal );
    }

    /**
     * Get value of attribute "table:use-last-column-styles".
     */
    public Boolean getUseLastColumnStyles()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-last-column-styles" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:use-last-column-styles".
     */
    public void setUseLastColumnStyles( Boolean _aUseLastColumnStyles )
    {                    
        String aStringVal = OdfBoolean.toString( _aUseLastColumnStyles );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-last-column-styles" ), aStringVal );
    }

    /**
     * Get value of attribute "table:use-banding-rows-styles".
     */
    public Boolean getUseBandingRowsStyles()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-banding-rows-styles" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:use-banding-rows-styles".
     */
    public void setUseBandingRowsStyles( Boolean _aUseBandingRowsStyles )
    {                    
        String aStringVal = OdfBoolean.toString( _aUseBandingRowsStyles );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-banding-rows-styles" ), aStringVal );
    }

    /**
     * Get value of attribute "table:use-banding-columns-styles".
     */
    public Boolean getUseBandingColumnsStyles()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-banding-columns-styles" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:use-banding-columns-styles".
     */
    public void setUseBandingColumnsStyles( Boolean _aUseBandingColumnsStyles )
    {                    
        String aStringVal = OdfBoolean.toString( _aUseBandingColumnsStyles );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "use-banding-columns-styles" ), aStringVal );
    }

    /**
     * Get value of attribute "table:protected".
     */
    public Boolean getProtected()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "protected" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:protected".
     */
    public void setProtected( Boolean _aProtected )
    {                    
        String aStringVal = OdfBoolean.toString( _aProtected );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "protected" ), aStringVal );
    }

    /**
     * Get value of attribute "table:protection-key".
     */
    public String getProtectionKey()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "protection-key" ) );
    }

    /**
     * Set value of attribute "table:protection-key".
     */
    public void setProtectionKey( String _aProtectionKey )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "protection-key" ), _aProtectionKey );
    }

    /**
     * Get value of attribute "table:protection-key-digest-algorithm".
     */
    public String getProtectionKeyDigestAlgorithm()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "protection-key-digest-algorithm" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "http://www.w3.org/2000/09/xmldsig#sha1";
        }

        return OdfAnyURI.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:protection-key-digest-algorithm".
     */
    public void setProtectionKeyDigestAlgorithm( String _aProtectionKeyDigestAlgorithm )
    {                    
        String aStringVal = OdfAnyURI.toString( _aProtectionKeyDigestAlgorithm );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "protection-key-digest-algorithm" ), aStringVal );
    }

    /**
     * Get value of attribute "table:print".
     */
    public Boolean getPrint()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "print" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "true";
        }

        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:print".
     */
    public void setPrint( Boolean _aPrint )
    {                    
        String aStringVal = OdfBoolean.toString( _aPrint );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "print" ), aStringVal );
    }

    /**
     * Get value of attribute "table:print-ranges".
     */
    public String getPrintRanges()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "print-ranges" ) );
        return OdfCellRangeAddressList.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:print-ranges".
     */
    public void setPrintRanges( String _aPrintRanges )
    {                    
        String aStringVal = OdfCellRangeAddressList.toString( _aPrintRanges );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "print-ranges" ), aStringVal );
    }

    /**
     * Get value of attribute "xml:id".
     */
    public String getXmlid()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.XML, "id" ) );
        return OdfId.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "xml:id".
     */
    public void setXmlid( String _aXmlid )
    {                    
        String aStringVal = OdfId.toString( _aXmlid );
        setOdfAttribute( OdfName.get( OdfNamespace.XML, "id" ), aStringVal );
    }

    /**
     * Get value of attribute "table:is-sub-table".
     */
    public Boolean getIsSubTable()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "is-sub-table" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:is-sub-table".
     */
    public void setIsSubTable( Boolean _aIsSubTable )
    {                    
        String aStringVal = OdfBoolean.toString( _aIsSubTable );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "is-sub-table" ), aStringVal );
    }

    /**
    * Create child element "table:title".
    */
    public OdfTitleElement createTitleElement()
    {
        OdfTitleElement  _nTitle = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTitleElement.class);
        this.appendChild( _nTitle);
        return  _nTitle;
    }                   
               
    /**
    * Create child element "table:desc".
    */
    public OdfDescElement createDescElement()
    {
        OdfDescElement  _nDesc = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDescElement.class);
        this.appendChild( _nDesc);
        return  _nDesc;
    }                   
               
    /**
    * Create child element "table:table-source".
    */
    public OdfTableSourceElement createTableSourceElement(String   _aHref)
    {
        OdfTableSourceElement  _nTableSource = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableSourceElement.class);
        _nTableSource.setHref( _aHref);
        this.appendChild( _nTableSource);
        return  _nTableSource;      
    }
    
    /**
    * Create child element "office:dde-source".
    */
    public OdfDdeSourceElement createDdeSourceElement(String   _aDdeApplication, String   _aDdeTopic, String   _aDdeItem)
    {
        OdfDdeSourceElement  _nDdeSource = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDdeSourceElement.class);
        _nDdeSource.setDdeApplication( _aDdeApplication);
        _nDdeSource.setDdeTopic( _aDdeTopic);
        _nDdeSource.setDdeItem( _aDdeItem);
        this.appendChild( _nDdeSource);
        return  _nDdeSource;      
    }
    
    /**
    * Create child element "table:scenario".
    */
    public OdfScenarioElement createScenarioElement(String   _aScenarioRanges, Boolean   _aIsActive)
    {
        OdfScenarioElement  _nScenario = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfScenarioElement.class);
        _nScenario.setScenarioRanges( _aScenarioRanges);
        _nScenario.setIsActive( _aIsActive);
        this.appendChild( _nScenario);
        return  _nScenario;      
    }
    
    /**
    * Create child element "form:form".
    */
    public OdfFormElement createFormElement()
    {
        OdfFormElement  _nForm = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfFormElement.class);
        this.appendChild( _nForm);
        return  _nForm;
    }                   
               
    /**
    * Create child element "xforms:model".
    */
    public OdfModelElement createModelElement()
    {
        OdfModelElement  _nModel = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfModelElement.class);
        this.appendChild( _nModel);
        return  _nModel;
    }                   
               
    /**
    * Create child element "table:shapes".
    */
    public OdfShapesElement createShapesElement()
    {
        OdfShapesElement  _nShapes = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfShapesElement.class);
        this.appendChild( _nShapes);
        return  _nShapes;
    }                   
               
    /**
    * Create child element "table:table-column-group".
    */
    public OdfTableColumnGroupElement createTableColumnGroupElement()
    {
        OdfTableColumnGroupElement  _nTableColumnGroup = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableColumnGroupElement.class);
        this.appendChild( _nTableColumnGroup);
        return  _nTableColumnGroup;
    }                   
               
    /**
    * Create child element "table:table-columns".
    */
    public OdfTableColumnsElement createTableColumnsElement()
    {
        OdfTableColumnsElement  _nTableColumns = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableColumnsElement.class);
        this.appendChild( _nTableColumns);
        return  _nTableColumns;
    }                   
               
    /**
    * Create child element "table:table-column".
    */
    public OdfTableColumnElement createTableColumnElement()
    {
        OdfTableColumnElement  _nTableColumn = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableColumnElement.class);
        this.appendChild( _nTableColumn);
        return  _nTableColumn;
    }                   
               
    /**
    * Create child element "table:table-header-columns".
    */
    public OdfTableHeaderColumnsElement createTableHeaderColumnsElement()
    {
        OdfTableHeaderColumnsElement  _nTableHeaderColumns = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableHeaderColumnsElement.class);
        this.appendChild( _nTableHeaderColumns);
        return  _nTableHeaderColumns;
    }                   
               
    /**
    * Create child element "table:table-row-group".
    */
    public OdfTableRowGroupElement createTableRowGroupElement()
    {
        OdfTableRowGroupElement  _nTableRowGroup = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableRowGroupElement.class);
        this.appendChild( _nTableRowGroup);
        return  _nTableRowGroup;
    }                   
               
    /**
    * Create child element "table:table-rows".
    */
    public OdfTableRowsElement createTableRowsElement()
    {
        OdfTableRowsElement  _nTableRows = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableRowsElement.class);
        this.appendChild( _nTableRows);
        return  _nTableRows;
    }                   
               
    /**
    * Create child element "text:soft-page-break".
    */
    public OdfSoftPageBreakElement createSoftPageBreakElement()
    {
        OdfSoftPageBreakElement  _nSoftPageBreak = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSoftPageBreakElement.class);
        this.appendChild( _nSoftPageBreak);
        return  _nSoftPageBreak;
    }                   
               
    /**
    * Create child element "table:table-row".
    */
    public OdfTableRowElement createTableRowElement()
    {
        OdfTableRowElement  _nTableRow = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableRowElement.class);
        this.appendChild( _nTableRow);
        return  _nTableRow;
    }                   
               
    /**
    * Create child element "table:table-header-rows".
    */
    public OdfTableHeaderRowsElement createTableHeaderRowsElement()
    {
        OdfTableHeaderRowsElement  _nTableHeaderRows = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableHeaderRowsElement.class);
        this.appendChild( _nTableHeaderRows);
        return  _nTableHeaderRows;
    }                   
               
}
