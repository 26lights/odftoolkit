/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.draw;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.style.OdfStyleFamily;
import org.odftoolkit.odfdom.dom.element.OdfStylableElement;
import org.odftoolkit.odfdom.dom.type.OdfStyleName;
import org.odftoolkit.odfdom.dom.type.OdfId;


/**
 * ODF DOM Element implementation for element "<draw:page>".
 */
public abstract class OdfPageElement extends OdfStylableElement
{        
    /**
	 * 
	 */
	private static final long serialVersionUID = 1310779923515422257L;
	public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.DRAW, "page" );

    public OdfPageElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME, OdfStyleFamily.DrawingPage, OdfName.get( OdfNamespace.DRAW, "style-name" ) );
    }

    @Override
	public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialize mandatory attributes.
     */
    public void init(String _aMasterPageName)
    {
        setMasterPageName( _aMasterPageName );
    }

    /**
     * Get value of attribute "presentation:use-header-name".
     */
    public String getUseHeaderName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.PRESENTATION, "use-header-name" ) );
    }

    /**
     * Set value of attribute "presentation:use-header-name".
     */
    public void setUseHeaderName( String _aUseHeaderName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.PRESENTATION, "use-header-name" ), _aUseHeaderName );
    }

    /**
     * Get value of attribute "presentation:use-footer-name".
     */
    public String getUseFooterName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.PRESENTATION, "use-footer-name" ) );
    }

    /**
     * Set value of attribute "presentation:use-footer-name".
     */
    public void setUseFooterName( String _aUseFooterName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.PRESENTATION, "use-footer-name" ), _aUseFooterName );
    }

    /**
     * Get value of attribute "presentation:use-date-time-name".
     */
    public String getUseDateTimeName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.PRESENTATION, "use-date-time-name" ) );
    }

    /**
     * Set value of attribute "presentation:use-date-time-name".
     */
    public void setUseDateTimeName( String _aUseDateTimeName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.PRESENTATION, "use-date-time-name" ), _aUseDateTimeName );
    }

    /**
     * Get value of attribute "draw:name".
     */
    public String getName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "name" ) );
    }

    /**
     * Set value of attribute "draw:name".
     */
    public void setName( String _aName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "name" ), _aName );
    }

    /**
     * Get value of attribute "draw:style-name".
     */
    public String getDrawStyleName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "style-name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:style-name".
     */
    public void setDrawStyleName( String _aDrawStyleName )
    {                    
        String aStringVal = OdfStyleName.toString( _aDrawStyleName );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "style-name" ), aStringVal );
    }

    /**
     * Get value of attribute "draw:master-page-name".
     */
    public String getMasterPageName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "master-page-name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:master-page-name".
     */
    public void setMasterPageName( String _aMasterPageName )
    {                    
        String aStringVal = OdfStyleName.toString( _aMasterPageName );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "master-page-name" ), aStringVal );
    }

    /**
     * Get value of attribute "presentation:presentation-page-layout-name".
     */
    public String getPresentationPageLayoutName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.PRESENTATION, "presentation-page-layout-name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "presentation:presentation-page-layout-name".
     */
    public void setPresentationPageLayoutName( String _aPresentationPageLayoutName )
    {                    
        String aStringVal = OdfStyleName.toString( _aPresentationPageLayoutName );
        setOdfAttribute( OdfName.get( OdfNamespace.PRESENTATION, "presentation-page-layout-name" ), aStringVal );
    }

    /**
     * Get value of attribute "draw:id".
     */
    public String getDrawid()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "id" ) );
    }

    /**
     * Set value of attribute "draw:id".
     */
    public void setDrawid( String _aDrawid )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "id" ), _aDrawid );
    }

    /**
     * Get value of attribute "draw:nav-order".
     */
    public String getNavOrder()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "nav-order" ) );
        return OdfId.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:nav-order".
     */
    public void setNavOrder( String _aNavOrder )
    {                    
        String aStringVal = OdfId.toString( _aNavOrder );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "nav-order" ), aStringVal );
    }

    /**
     * Get value of attribute "xml:id".
     */
    public String getXmlid()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.XML, "id" ) );
        return OdfId.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "xml:id".
     */
    public void setXmlid( String _aXmlid )
    {                    
        String aStringVal = OdfId.toString( _aXmlid );
        setOdfAttribute( OdfName.get( OdfNamespace.XML, "id" ), aStringVal );
    }

}
