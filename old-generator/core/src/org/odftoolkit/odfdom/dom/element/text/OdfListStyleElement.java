/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.text;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfStyleBase;
import org.odftoolkit.odfdom.dom.type.OdfStyleName;
import org.odftoolkit.odfdom.dom.type.OdfBoolean;

;

/**
 * ODF DOM Element implementation for element "<text:list-style>".
 */
public abstract class OdfListStyleElement extends OdfStyleBase
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.TEXT, "list-style" );

    public OdfListStyleElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialize mandatory attributes.
     */
    public void init(String _aName)
    {
        setName( _aName );
    }

    /**
     * Get value of attribute "style:name".
     */
    public String getName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "style:name".
     */
    public void setName( String _aName )
    {                    
        String aStringVal = OdfStyleName.toString( _aName );
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "name" ), aStringVal );
    }

    /**
     * Get value of attribute "style:display-name".
     */
    public String getDisplayName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "display-name" ) );
    }

    /**
     * Set value of attribute "style:display-name".
     */
    public void setDisplayName( String _aDisplayName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "display-name" ), _aDisplayName );
    }

    /**
     * Get value of attribute "text:consecutive-numbering".
     */
    public Boolean getConsecutiveNumbering()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "consecutive-numbering" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:consecutive-numbering".
     */
    public void setConsecutiveNumbering( Boolean _aConsecutiveNumbering )
    {                    
        String aStringVal = OdfBoolean.toString( _aConsecutiveNumbering );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "consecutive-numbering" ), aStringVal );
    }

    /**
    * Create child element "text:list-level-style-number".
    */
    public OdfListLevelStyleNumberElement createListLevelStyleNumberElement(Integer   _aLevel, String   _aNumFormat)
    {
        OdfListLevelStyleNumberElement  _nListLevelStyleNumber = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfListLevelStyleNumberElement.class);
        _nListLevelStyleNumber.setLevel( _aLevel);
        _nListLevelStyleNumber.setNumFormat( _aNumFormat);
        this.appendChild( _nListLevelStyleNumber);
        return  _nListLevelStyleNumber;      
    }
    
    /**
    * Create child element "text:list-level-style-number".
    */
    public OdfListLevelStyleNumberElement createListLevelStyleNumberElement(String   _aNumFormat, Integer   _aLevel)
    {
        OdfListLevelStyleNumberElement  _nListLevelStyleNumber = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfListLevelStyleNumberElement.class);
        _nListLevelStyleNumber.setNumFormat( _aNumFormat);
        _nListLevelStyleNumber.setLevel( _aLevel);
        this.appendChild( _nListLevelStyleNumber);
        return  _nListLevelStyleNumber;      
    }
    
    /**
    * Create child element "text:list-level-style-bullet".
    */
    public OdfListLevelStyleBulletElement createListLevelStyleBulletElement(Integer   _aLevel, String   _aBulletChar)
    {
        OdfListLevelStyleBulletElement  _nListLevelStyleBullet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfListLevelStyleBulletElement.class);
        _nListLevelStyleBullet.setLevel( _aLevel);
        _nListLevelStyleBullet.setBulletChar( _aBulletChar);
        this.appendChild( _nListLevelStyleBullet);
        return  _nListLevelStyleBullet;      
    }
    
    /**
    * Create child element "text:list-level-style-image".
    */
    public OdfListLevelStyleImageElement createListLevelStyleImageElement(Integer   _aLevel)
    {
        OdfListLevelStyleImageElement  _nListLevelStyleImage = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfListLevelStyleImageElement.class);
        _nListLevelStyleImage.setLevel( _aLevel);
        this.appendChild( _nListLevelStyleImage);
        return  _nListLevelStyleImage;      
    }
    
}
