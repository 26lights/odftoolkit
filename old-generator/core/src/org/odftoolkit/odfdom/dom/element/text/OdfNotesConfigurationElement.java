/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.text;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;
import org.odftoolkit.odfdom.dom.type.text.OdfNoteClassType;
import org.odftoolkit.odfdom.dom.type.OdfStyleName;
import org.odftoolkit.odfdom.dom.type.OdfNonNegativeInteger;
import org.odftoolkit.odfdom.dom.type.OdfBoolean;
import org.odftoolkit.odfdom.dom.type.text.OdfStartNumberingAtType;
import org.odftoolkit.odfdom.dom.type.text.OdfFootnotesPositionType;

;

/**
 * ODF DOM Element implementation for element "<text:notes-configuration>".
 */
public abstract class OdfNotesConfigurationElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.TEXT, "notes-configuration" );

    public OdfNotesConfigurationElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialize mandatory attributes.
     */
    public void init(OdfNoteClassType _aNoteClass)
    {
        setNoteClass( _aNoteClass );
    }

    /**
     * Get value of attribute "text:note-class".
     */
    public OdfNoteClassType getNoteClass()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "note-class" ) );
        return OdfNoteClassType.enumValueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:note-class".
     */
    public void setNoteClass( OdfNoteClassType _aNoteClass )
    {                    
        String aStringVal = OdfNoteClassType.toString( _aNoteClass );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "note-class" ), aStringVal );
    }

    /**
     * Get value of attribute "text:citation-style-name".
     */
    public String getCitationStyleName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "citation-style-name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:citation-style-name".
     */
    public void setCitationStyleName( String _aCitationStyleName )
    {                    
        String aStringVal = OdfStyleName.toString( _aCitationStyleName );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "citation-style-name" ), aStringVal );
    }

    /**
     * Get value of attribute "text:citation-body-style-name".
     */
    public String getCitationBodyStyleName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "citation-body-style-name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:citation-body-style-name".
     */
    public void setCitationBodyStyleName( String _aCitationBodyStyleName )
    {                    
        String aStringVal = OdfStyleName.toString( _aCitationBodyStyleName );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "citation-body-style-name" ), aStringVal );
    }

    /**
     * Get value of attribute "text:default-style-name".
     */
    public String getDefaultStyleName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "default-style-name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:default-style-name".
     */
    public void setDefaultStyleName( String _aDefaultStyleName )
    {                    
        String aStringVal = OdfStyleName.toString( _aDefaultStyleName );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "default-style-name" ), aStringVal );
    }

    /**
     * Get value of attribute "text:master-page-name".
     */
    public String getMasterPageName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "master-page-name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:master-page-name".
     */
    public void setMasterPageName( String _aMasterPageName )
    {                    
        String aStringVal = OdfStyleName.toString( _aMasterPageName );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "master-page-name" ), aStringVal );
    }

    /**
     * Get value of attribute "text:start-value".
     */
    public Integer getStartValue()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "start-value" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "1";
        }

        return OdfNonNegativeInteger.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:start-value".
     */
    public void setStartValue( Integer _aStartValue )
    {                    
        String aStringVal = OdfNonNegativeInteger.toString( _aStartValue );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "start-value" ), aStringVal );
    }

    /**
     * Get value of attribute "style:num-prefix".
     */
    public String getNumPrefix()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "num-prefix" ) );
    }

    /**
     * Set value of attribute "style:num-prefix".
     */
    public void setNumPrefix( String _aNumPrefix )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "num-prefix" ), _aNumPrefix );
    }

    /**
     * Get value of attribute "style:num-suffix".
     */
    public String getNumSuffix()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "num-suffix" ) );
    }

    /**
     * Set value of attribute "style:num-suffix".
     */
    public void setNumSuffix( String _aNumSuffix )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "num-suffix" ), _aNumSuffix );
    }

    /**
     * Get value of attribute "style:num-format".
     */
    public String getNumFormat()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "num-format" ) );
    }

    /**
     * Set value of attribute "style:num-format".
     */
    public void setNumFormat( String _aNumFormat )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "num-format" ), _aNumFormat );
    }

    /**
     * Get value of attribute "style:num-letter-sync".
     */
    public Boolean getNumLetterSync()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "num-letter-sync" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "style:num-letter-sync".
     */
    public void setNumLetterSync( Boolean _aNumLetterSync )
    {                    
        String aStringVal = OdfBoolean.toString( _aNumLetterSync );
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "num-letter-sync" ), aStringVal );
    }

    /**
     * Get value of attribute "text:start-numbering-at".
     */
    public OdfStartNumberingAtType getStartNumberingAt()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "start-numbering-at" ) );
        return OdfStartNumberingAtType.enumValueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:start-numbering-at".
     */
    public void setStartNumberingAt( OdfStartNumberingAtType _aStartNumberingAt )
    {                    
        String aStringVal = OdfStartNumberingAtType.toString( _aStartNumberingAt );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "start-numbering-at" ), aStringVal );
    }

    /**
     * Get value of attribute "text:footnotes-position".
     */
    public OdfFootnotesPositionType getFootnotesPosition()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "footnotes-position" ) );
        return OdfFootnotesPositionType.enumValueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:footnotes-position".
     */
    public void setFootnotesPosition( OdfFootnotesPositionType _aFootnotesPosition )
    {                    
        String aStringVal = OdfFootnotesPositionType.toString( _aFootnotesPosition );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "footnotes-position" ), aStringVal );
    }

}
