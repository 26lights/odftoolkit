/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.table;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;


/**
 * ODF DOM Element implementation for element "<table:cell-address>".
 */
public abstract class OdfCellAddressElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.TABLE, "cell-address" );

    public OdfCellAddressElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialize mandatory attributes.
     */
    public void init(Integer _aColumn, Integer _aRow, Integer _aTable)
    {
        setColumn( _aColumn );
        setRow( _aRow );
        setTable( _aTable );
    }

    /**
     * Get value of attribute "table:column".
     */
    public Integer getColumn()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "column" ) );
        return Integer.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:column".
     */
    public void setColumn( Integer _aColumn )
    {                    
        String aStringVal = Integer.toString( _aColumn );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "column" ), aStringVal );
    }

    /**
     * Get value of attribute "table:row".
     */
    public Integer getRow()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "row" ) );
        return Integer.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:row".
     */
    public void setRow( Integer _aRow )
    {                    
        String aStringVal = Integer.toString( _aRow );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "row" ), aStringVal );
    }

    /**
     * Get value of attribute "table:table".
     */
    public Integer getTable()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "table" ) );
        return Integer.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:table".
     */
    public void setTable( Integer _aTable )
    {                    
        String aStringVal = Integer.toString( _aTable );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "table" ), aStringVal );
    }

}
