/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.config;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;

import org.odftoolkit.odfdom.dom.type.config.OdfType;
import org.odftoolkit.odfdom.dom.type.config.OdfType;

/**
 * ODF DOM Element implementation for element "<config:config-item-map-entry>".
 */
public abstract class OdfConfigItemMapEntryElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.CONFIG, "config-item-map-entry" );

    public OdfConfigItemMapEntryElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
     * Get value of attribute "config:name".
     */
    public String getName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.CONFIG, "name" ) );
    }

    /**
     * Set value of attribute "config:name".
     */
    public void setName( String _aName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.CONFIG, "name" ), _aName );
    }

    /**
    * Create child element "config:config-item".
    */
    public OdfConfigItemElement createConfigItemElement(String   _aName, OdfType   _aType)
    {
        OdfConfigItemElement  _nConfigItem = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfConfigItemElement.class);
        _nConfigItem.setName( _aName);
        _nConfigItem.setType( _aType);
        this.appendChild( _nConfigItem);
        return  _nConfigItem;      
    }
    
    /**
    * Create child element "config:config-item-set".
    */
    public OdfConfigItemSetElement createConfigItemSetElement(String   _aName)
    {
        OdfConfigItemSetElement  _nConfigItemSet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfConfigItemSetElement.class);
        _nConfigItemSet.setName( _aName);
        this.appendChild( _nConfigItemSet);
        return  _nConfigItemSet;      
    }
    
    /**
    * Create child element "config:config-item-map-named".
    */
    public OdfConfigItemMapNamedElement createConfigItemMapNamedElement(String   _aName)
    {
        OdfConfigItemMapNamedElement  _nConfigItemMapNamed = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfConfigItemMapNamedElement.class);
        _nConfigItemMapNamed.setName( _aName);
        this.appendChild( _nConfigItemMapNamed);
        return  _nConfigItemMapNamed;      
    }
    
    /**
    * Create child element "config:config-item-map-indexed".
    */
    public OdfConfigItemMapIndexedElement createConfigItemMapIndexedElement(String   _aName)
    {
        OdfConfigItemMapIndexedElement  _nConfigItemMapIndexed = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfConfigItemMapIndexedElement.class);
        _nConfigItemMapIndexed.setName( _aName);
        this.appendChild( _nConfigItemMapIndexed);
        return  _nConfigItemMapIndexed;      
    }
    
}
