/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.manifest;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;
import org.odftoolkit.odfdom.dom.type.OdfNonNegativeInteger;

;

/**
 * ODF DOM Element implementation for element "<manifest:file-entry>".
 */
public abstract class OdfFileEntryElement extends OdfElement
{        
    /**
	 * 
	 */
	private static final long serialVersionUID = 5883530935973393281L;
	public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.MANIFEST, "file-entry" );

    public OdfFileEntryElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    @Override
	public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialize mandatory attributes.
     */
    public void init(String _aFullPath, String _aMediaType)
    {
        setFullPath( _aFullPath );
        setMediaType( _aMediaType );
    }

    /**
     * Get value of attribute "manifest:full-path".
     */
    public String getFullPath()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.MANIFEST, "full-path" ) );
    }

    /**
     * Set value of attribute "manifest:full-path".
     */
    public void setFullPath( String _aFullPath )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.MANIFEST, "full-path" ), _aFullPath );
    }

    /**
     * Get value of attribute "manifest:size".
     */
    public Integer getSize()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.MANIFEST, "size" ) );
        return OdfNonNegativeInteger.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "manifest:size".
     */
    public void setSize( Integer _aSize )
    {                    
        String aStringVal = OdfNonNegativeInteger.toString( _aSize );
        setOdfAttribute( OdfName.get( OdfNamespace.MANIFEST, "size" ), aStringVal );
    }

    /**
     * Get value of attribute "manifest:media-type".
     */
    public String getMediaType()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.MANIFEST, "media-type" ) );
    }

    /**
     * Set value of attribute "manifest:media-type".
     */
    public void setMediaType( String _aMediaType )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.MANIFEST, "media-type" ), _aMediaType );
    }

    /**
     * Get value of attribute "manifest:version".
     */
    public String getVersion()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.MANIFEST, "version" ) );
    }

    /**
     * Set value of attribute "manifest:version".
     */
    public void setVersion( String _aVersion )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.MANIFEST, "version" ), _aVersion );
    }

    /**
    * Create child element "manifest:encryption-data".
    */
    public OdfEncryptionDataElement createEncryptionDataElement(String   _aChecksumType, String   _aChecksum)
    {
        OdfEncryptionDataElement  _nEncryptionData = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfEncryptionDataElement.class);
        _nEncryptionData.setChecksumType( _aChecksumType);
        _nEncryptionData.setChecksum( _aChecksum);
        this.appendChild( _nEncryptionData);
        return  _nEncryptionData;      
    }
    
}
