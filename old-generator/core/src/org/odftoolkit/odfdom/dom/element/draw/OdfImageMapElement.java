/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.draw;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;

;

/**
 * ODF DOM Element implementation for element "<draw:image-map>".
 */
public abstract class OdfImageMapElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.DRAW, "image-map" );

    public OdfImageMapElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
    * Create child element "draw:area-rectangle".
    */
    public OdfAreaRectangleElement createAreaRectangleElement(String   _aX, String   _aY, String   _aWidth, String   _aHeight)
    {
        OdfAreaRectangleElement  _nAreaRectangle = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAreaRectangleElement.class);
        _nAreaRectangle.setX( _aX);
        _nAreaRectangle.setY( _aY);
        _nAreaRectangle.setWidth( _aWidth);
        _nAreaRectangle.setHeight( _aHeight);
        this.appendChild( _nAreaRectangle);
        return  _nAreaRectangle;      
    }
    
    /**
    * Create child element "draw:area-circle".
    */
    public OdfAreaCircleElement createAreaCircleElement(String   _aCx, String   _aCy, String   _aR)
    {
        OdfAreaCircleElement  _nAreaCircle = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAreaCircleElement.class);
        _nAreaCircle.setCx( _aCx);
        _nAreaCircle.setCy( _aCy);
        _nAreaCircle.setR( _aR);
        this.appendChild( _nAreaCircle);
        return  _nAreaCircle;      
    }
    
    /**
    * Create child element "draw:area-polygon".
    */
    public OdfAreaPolygonElement createAreaPolygonElement(String   _aX, String   _aY, String   _aWidth, String   _aHeight, Integer   _aViewBox, String   _aPoints)
    {
        OdfAreaPolygonElement  _nAreaPolygon = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAreaPolygonElement.class);
        _nAreaPolygon.setX( _aX);
        _nAreaPolygon.setY( _aY);
        _nAreaPolygon.setWidth( _aWidth);
        _nAreaPolygon.setHeight( _aHeight);
        _nAreaPolygon.setViewBox( _aViewBox);
        _nAreaPolygon.setPoints( _aPoints);
        this.appendChild( _nAreaPolygon);
        return  _nAreaPolygon;      
    }
    
}
