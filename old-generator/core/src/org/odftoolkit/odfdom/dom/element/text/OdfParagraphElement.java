/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.text;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.style.OdfStyleFamily;

import org.odftoolkit.odfdom.dom.type.text.OdfNoteClassType;
import org.odftoolkit.odfdom.dom.type.text.OdfNoteClassType;
import org.odftoolkit.odfdom.dom.element.office.OdfAnnotationElement;
import org.odftoolkit.odfdom.dom.element.office.OdfAnnotationEndElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfRectElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfLineElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfPolylineElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfPolygonElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfRegularPolygonElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfPathElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfCircleElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfEllipseElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfGroupElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfPageThumbnailElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfFrameElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfCaptionElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfConnectorElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfControlElement;
import org.odftoolkit.odfdom.dom.element.dr3d.OdfSceneElement;
import org.odftoolkit.odfdom.dom.element.draw.OdfCustomShapeElement;
import org.odftoolkit.odfdom.dom.type.text.OdfPageContiuationSelectType;
import org.odftoolkit.odfdom.dom.type.text.OdfChapterDisplayType;
import org.odftoolkit.odfdom.dom.type.office.OdfValueType;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.datatype.Duration;
import org.odftoolkit.odfdom.dom.type.text.OdfPlaceholderType;
import org.odftoolkit.odfdom.dom.type.text.OdfKindType;
import org.odftoolkit.odfdom.dom.type.text.OdfBibliographyType;
import org.odftoolkit.odfdom.dom.element.presentation.OdfHeaderElement;
import org.odftoolkit.odfdom.dom.element.presentation.OdfFooterElement;
import org.odftoolkit.odfdom.dom.element.presentation.OdfDateTimeElement;

/**
 * ODF DOM Element implementation for element "<text:p>".
 */
public abstract class OdfParagraphElement extends OdfParagraphElementBase
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.TEXT, "p" );

    public OdfParagraphElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME, OdfStyleFamily.Paragraph, OdfName.get( OdfNamespace.TEXT, "style-name" ) );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
    * Create child element "text:s".
    */
    public OdfSpaceElement createSpaceElement()
    {
        OdfSpaceElement  _nSpace = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSpaceElement.class);
        this.appendChild( _nSpace);
        return  _nSpace;
    }                   
               
    /**
    * Create child element "text:tab".
    */
    public OdfTabElement createTabElement()
    {
        OdfTabElement  _nTab = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTabElement.class);
        this.appendChild( _nTab);
        return  _nTab;
    }                   
               
    /**
    * Create child element "text:line-break".
    */
    public OdfLineBreakElement createLineBreakElement()
    {
        OdfLineBreakElement  _nLineBreak = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfLineBreakElement.class);
        this.appendChild( _nLineBreak);
        return  _nLineBreak;
    }                   
               
    /**
    * Create child element "text:soft-page-break".
    */
    public OdfSoftPageBreakElement createSoftPageBreakElement()
    {
        OdfSoftPageBreakElement  _nSoftPageBreak = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSoftPageBreakElement.class);
        this.appendChild( _nSoftPageBreak);
        return  _nSoftPageBreak;
    }                   
               
    /**
    * Create child element "text:span".
    */
    public OdfSpanElement createSpanElement()
    {
        OdfSpanElement  _nSpan = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSpanElement.class);
        this.appendChild( _nSpan);
        return  _nSpan;
    }                   
               
    /**
    * Create child element "text:a".
    */
    public org.odftoolkit.odfdom.dom.element.text.OdfHyperlinkElement createtextHyperlinkElement(String   _aHref)
    {
        org.odftoolkit.odfdom.dom.element.text.OdfHyperlinkElement  _nHyperlink = ((OdfFileDom)this.ownerDocument).createOdfElement(org.odftoolkit.odfdom.dom.element.text.OdfHyperlinkElement.class);
        _nHyperlink.setHref( _aHref);
        this.appendChild( _nHyperlink);
        return  _nHyperlink;      
    }
    
    /**
    * Create child element "text:meta".
    */
    public OdfMetaElement createMetaElement()
    {
        OdfMetaElement  _nMeta = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfMetaElement.class);
        this.appendChild( _nMeta);
        return  _nMeta;
    }                   
               
    /**
    * Create child element "text:bookmark".
    */
    public OdfBookmarkElement createBookmarkElement(String   _aName)
    {
        OdfBookmarkElement  _nBookmark = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfBookmarkElement.class);
        _nBookmark.setName( _aName);
        this.appendChild( _nBookmark);
        return  _nBookmark;      
    }
    
    /**
    * Create child element "text:bookmark-start".
    */
    public OdfBookmarkStartElement createBookmarkStartElement(String   _aName)
    {
        OdfBookmarkStartElement  _nBookmarkStart = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfBookmarkStartElement.class);
        _nBookmarkStart.setName( _aName);
        this.appendChild( _nBookmarkStart);
        return  _nBookmarkStart;      
    }
    
    /**
    * Create child element "text:bookmark-end".
    */
    public OdfBookmarkEndElement createBookmarkEndElement(String   _aName)
    {
        OdfBookmarkEndElement  _nBookmarkEnd = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfBookmarkEndElement.class);
        _nBookmarkEnd.setName( _aName);
        this.appendChild( _nBookmarkEnd);
        return  _nBookmarkEnd;      
    }
    
    /**
    * Create child element "text:reference-mark".
    */
    public OdfReferenceMarkElement createReferenceMarkElement(String   _aName)
    {
        OdfReferenceMarkElement  _nReferenceMark = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfReferenceMarkElement.class);
        _nReferenceMark.setName( _aName);
        this.appendChild( _nReferenceMark);
        return  _nReferenceMark;      
    }
    
    /**
    * Create child element "text:note".
    */
    public OdfNoteElement createNoteElement(OdfNoteClassType   _aNoteClass)
    {
        OdfNoteElement  _nNote = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfNoteElement.class);
        _nNote.setNoteClass( _aNoteClass);
        this.appendChild( _nNote);
        return  _nNote;      
    }
    
    /**
    * Create child element "text:ruby".
    */
    public OdfRubyElement createRubyElement()
    {
        OdfRubyElement  _nRuby = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfRubyElement.class);
        this.appendChild( _nRuby);
        return  _nRuby;
    }                   
               
    /**
    * Create child element "office:annotation".
    */
    public OdfAnnotationElement createAnnotationElement()
    {
        OdfAnnotationElement  _nAnnotation = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAnnotationElement.class);
        this.appendChild( _nAnnotation);
        return  _nAnnotation;
    }                   
               
    /**
    * Create child element "office:annotation-end".
    */
    public OdfAnnotationEndElement createAnnotationEndElement(String   _aName)
    {
        OdfAnnotationEndElement  _nAnnotationEnd = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAnnotationEndElement.class);
        _nAnnotationEnd.setName( _aName);
        this.appendChild( _nAnnotationEnd);
        return  _nAnnotationEnd;      
    }
    
    /**
    * Create child element "draw:rect".
    */
    public OdfRectElement createRectElement()
    {
        OdfRectElement  _nRect = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfRectElement.class);
        this.appendChild( _nRect);
        return  _nRect;
    }                   
               
    /**
    * Create child element "draw:line".
    */
    public OdfLineElement createLineElement(String   _aX1, String   _aY1, String   _aX2, String   _aY2)
    {
        OdfLineElement  _nLine = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfLineElement.class);
        _nLine.setX1( _aX1);
        _nLine.setY1( _aY1);
        _nLine.setX2( _aX2);
        _nLine.setY2( _aY2);
        this.appendChild( _nLine);
        return  _nLine;      
    }
    
    /**
    * Create child element "draw:polyline".
    */
    public OdfPolylineElement createPolylineElement(String   _aPoints, Integer   _aViewbox)
    {
        OdfPolylineElement  _nPolyline = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPolylineElement.class);
        _nPolyline.setPoints( _aPoints);
        _nPolyline.setViewbox( _aViewbox);
        this.appendChild( _nPolyline);
        return  _nPolyline;      
    }
    
    /**
    * Create child element "draw:polygon".
    */
    public OdfPolygonElement createPolygonElement(String   _aPoints, Integer   _aViewbox)
    {
        OdfPolygonElement  _nPolygon = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPolygonElement.class);
        _nPolygon.setPoints( _aPoints);
        _nPolygon.setViewbox( _aViewbox);
        this.appendChild( _nPolygon);
        return  _nPolygon;      
    }
    
    /**
    * Create child element "draw:regular-polygon".
    */
    public OdfRegularPolygonElement createRegularPolygonElement(Integer   _aCorners, Boolean   _aConcave)
    {
        OdfRegularPolygonElement  _nRegularPolygon = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfRegularPolygonElement.class);
        _nRegularPolygon.setCorners( _aCorners);
        _nRegularPolygon.setConcave( _aConcave);
        this.appendChild( _nRegularPolygon);
        return  _nRegularPolygon;      
    }
    
    /**
    * Create child element "draw:regular-polygon".
    */
    public OdfRegularPolygonElement createRegularPolygonElement(Boolean   _aConcave, Integer   _aCorners)
    {
        OdfRegularPolygonElement  _nRegularPolygon = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfRegularPolygonElement.class);
        _nRegularPolygon.setConcave( _aConcave);
        _nRegularPolygon.setCorners( _aCorners);
        this.appendChild( _nRegularPolygon);
        return  _nRegularPolygon;      
    }
    
    /**
    * Create child element "draw:path".
    */
    public OdfPathElement createPathElement(String   _aD, Integer   _aViewbox)
    {
        OdfPathElement  _nPath = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPathElement.class);
        _nPath.setD( _aD);
        _nPath.setViewbox( _aViewbox);
        this.appendChild( _nPath);
        return  _nPath;      
    }
    
    /**
    * Create child element "draw:circle".
    */
    public OdfCircleElement createCircleElement()
    {
        OdfCircleElement  _nCircle = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfCircleElement.class);
        this.appendChild( _nCircle);
        return  _nCircle;
    }                   
               
    /**
    * Create child element "draw:ellipse".
    */
    public OdfEllipseElement createEllipseElement()
    {
        OdfEllipseElement  _nEllipse = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfEllipseElement.class);
        this.appendChild( _nEllipse);
        return  _nEllipse;
    }                   
               
    /**
    * Create child element "draw:g".
    */
    public OdfGroupElement createGroupElement()
    {
        OdfGroupElement  _nGroup = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfGroupElement.class);
        this.appendChild( _nGroup);
        return  _nGroup;
    }                   
               
    /**
    * Create child element "draw:page-thumbnail".
    */
    public OdfPageThumbnailElement createPageThumbnailElement()
    {
        OdfPageThumbnailElement  _nPageThumbnail = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPageThumbnailElement.class);
        this.appendChild( _nPageThumbnail);
        return  _nPageThumbnail;
    }                   
               
    /**
    * Create child element "draw:frame".
    */
    public OdfFrameElement createFrameElement()
    {
        OdfFrameElement  _nFrame = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfFrameElement.class);
        this.appendChild( _nFrame);
        return  _nFrame;
    }                   
               
    /**
    * Create child element "draw:measure".
    */
    public org.odftoolkit.odfdom.dom.element.draw.OdfMeasureElement createdrawMeasureElement(String   _aX1, String   _aY1, String   _aX2, String   _aY2)
    {
        org.odftoolkit.odfdom.dom.element.draw.OdfMeasureElement  _nMeasure = ((OdfFileDom)this.ownerDocument).createOdfElement(org.odftoolkit.odfdom.dom.element.draw.OdfMeasureElement.class);
        _nMeasure.setX1( _aX1);
        _nMeasure.setY1( _aY1);
        _nMeasure.setX2( _aX2);
        _nMeasure.setY2( _aY2);
        this.appendChild( _nMeasure);
        return  _nMeasure;      
    }
    
    /**
    * Create child element "draw:caption".
    */
    public OdfCaptionElement createCaptionElement()
    {
        OdfCaptionElement  _nCaption = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfCaptionElement.class);
        this.appendChild( _nCaption);
        return  _nCaption;
    }                   
               
    /**
    * Create child element "draw:connector".
    */
    public OdfConnectorElement createConnectorElement(Integer   _aViewbox)
    {
        OdfConnectorElement  _nConnector = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfConnectorElement.class);
        _nConnector.setViewbox( _aViewbox);
        this.appendChild( _nConnector);
        return  _nConnector;      
    }
    
    /**
    * Create child element "draw:control".
    */
    public OdfControlElement createControlElement(String   _aControl)
    {
        OdfControlElement  _nControl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfControlElement.class);
        _nControl.setControl( _aControl);
        this.appendChild( _nControl);
        return  _nControl;      
    }
    
    /**
    * Create child element "dr3d:scene".
    */
    public OdfSceneElement createSceneElement()
    {
        OdfSceneElement  _nScene = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSceneElement.class);
        this.appendChild( _nScene);
        return  _nScene;
    }                   
               
    /**
    * Create child element "draw:custom-shape".
    */
    public OdfCustomShapeElement createCustomShapeElement()
    {
        OdfCustomShapeElement  _nCustomShape = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfCustomShapeElement.class);
        this.appendChild( _nCustomShape);
        return  _nCustomShape;
    }                   
               
    /**
    * Create child element "draw:a".
    */
    public org.odftoolkit.odfdom.dom.element.draw.OdfHyperlinkElement createdrawHyperlinkElement(String   _aHref)
    {
        org.odftoolkit.odfdom.dom.element.draw.OdfHyperlinkElement  _nHyperlink = ((OdfFileDom)this.ownerDocument).createOdfElement(org.odftoolkit.odfdom.dom.element.draw.OdfHyperlinkElement.class);
        _nHyperlink.setHref( _aHref);
        this.appendChild( _nHyperlink);
        return  _nHyperlink;      
    }
    
    /**
    * Create child element "text:date".
    */
    public OdfDateElement createDateElement()
    {
        OdfDateElement  _nDate = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDateElement.class);
        this.appendChild( _nDate);
        return  _nDate;
    }                   
               
    /**
    * Create child element "text:time".
    */
    public OdfTimeElement createTimeElement()
    {
        OdfTimeElement  _nTime = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTimeElement.class);
        this.appendChild( _nTime);
        return  _nTime;
    }                   
               
    /**
    * Create child element "text:page-number".
    */
    public OdfPageNumberElement createPageNumberElement()
    {
        OdfPageNumberElement  _nPageNumber = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPageNumberElement.class);
        this.appendChild( _nPageNumber);
        return  _nPageNumber;
    }                   
               
    /**
    * Create child element "text:page-continuation".
    */
    public OdfPageContinuationElement createPageContinuationElement(OdfPageContiuationSelectType   _aSelectPage)
    {
        OdfPageContinuationElement  _nPageContinuation = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPageContinuationElement.class);
        _nPageContinuation.setSelectPage( _aSelectPage);
        this.appendChild( _nPageContinuation);
        return  _nPageContinuation;      
    }
    
    /**
    * Create child element "text:sender-firstname".
    */
    public OdfSenderFirstnameElement createSenderFirstnameElement()
    {
        OdfSenderFirstnameElement  _nSenderFirstname = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderFirstnameElement.class);
        this.appendChild( _nSenderFirstname);
        return  _nSenderFirstname;
    }                   
               
    /**
    * Create child element "text:sender-lastname".
    */
    public OdfSenderLastnameElement createSenderLastnameElement()
    {
        OdfSenderLastnameElement  _nSenderLastname = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderLastnameElement.class);
        this.appendChild( _nSenderLastname);
        return  _nSenderLastname;
    }                   
               
    /**
    * Create child element "text:sender-initials".
    */
    public OdfSenderInitialsElement createSenderInitialsElement()
    {
        OdfSenderInitialsElement  _nSenderInitials = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderInitialsElement.class);
        this.appendChild( _nSenderInitials);
        return  _nSenderInitials;
    }                   
               
    /**
    * Create child element "text:sender-title".
    */
    public OdfSenderTitleElement createSenderTitleElement()
    {
        OdfSenderTitleElement  _nSenderTitle = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderTitleElement.class);
        this.appendChild( _nSenderTitle);
        return  _nSenderTitle;
    }                   
               
    /**
    * Create child element "text:sender-position".
    */
    public OdfSenderPositionElement createSenderPositionElement()
    {
        OdfSenderPositionElement  _nSenderPosition = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderPositionElement.class);
        this.appendChild( _nSenderPosition);
        return  _nSenderPosition;
    }                   
               
    /**
    * Create child element "text:sender-email".
    */
    public OdfSenderEmailElement createSenderEmailElement()
    {
        OdfSenderEmailElement  _nSenderEmail = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderEmailElement.class);
        this.appendChild( _nSenderEmail);
        return  _nSenderEmail;
    }                   
               
    /**
    * Create child element "text:sender-phone-private".
    */
    public OdfSenderPhonePrivateElement createSenderPhonePrivateElement()
    {
        OdfSenderPhonePrivateElement  _nSenderPhonePrivate = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderPhonePrivateElement.class);
        this.appendChild( _nSenderPhonePrivate);
        return  _nSenderPhonePrivate;
    }                   
               
    /**
    * Create child element "text:sender-fax".
    */
    public OdfSenderFaxElement createSenderFaxElement()
    {
        OdfSenderFaxElement  _nSenderFax = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderFaxElement.class);
        this.appendChild( _nSenderFax);
        return  _nSenderFax;
    }                   
               
    /**
    * Create child element "text:sender-company".
    */
    public OdfSenderCompanyElement createSenderCompanyElement()
    {
        OdfSenderCompanyElement  _nSenderCompany = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderCompanyElement.class);
        this.appendChild( _nSenderCompany);
        return  _nSenderCompany;
    }                   
               
    /**
    * Create child element "text:sender-phone-work".
    */
    public OdfSenderPhoneWorkElement createSenderPhoneWorkElement()
    {
        OdfSenderPhoneWorkElement  _nSenderPhoneWork = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderPhoneWorkElement.class);
        this.appendChild( _nSenderPhoneWork);
        return  _nSenderPhoneWork;
    }                   
               
    /**
    * Create child element "text:sender-street".
    */
    public OdfSenderStreetElement createSenderStreetElement()
    {
        OdfSenderStreetElement  _nSenderStreet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderStreetElement.class);
        this.appendChild( _nSenderStreet);
        return  _nSenderStreet;
    }                   
               
    /**
    * Create child element "text:sender-city".
    */
    public OdfSenderCityElement createSenderCityElement()
    {
        OdfSenderCityElement  _nSenderCity = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderCityElement.class);
        this.appendChild( _nSenderCity);
        return  _nSenderCity;
    }                   
               
    /**
    * Create child element "text:sender-postal-code".
    */
    public OdfSenderPostalCodeElement createSenderPostalCodeElement()
    {
        OdfSenderPostalCodeElement  _nSenderPostalCode = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderPostalCodeElement.class);
        this.appendChild( _nSenderPostalCode);
        return  _nSenderPostalCode;
    }                   
               
    /**
    * Create child element "text:sender-country".
    */
    public OdfSenderCountryElement createSenderCountryElement()
    {
        OdfSenderCountryElement  _nSenderCountry = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderCountryElement.class);
        this.appendChild( _nSenderCountry);
        return  _nSenderCountry;
    }                   
               
    /**
    * Create child element "text:sender-state-or-province".
    */
    public OdfSenderStateOrProvinceElement createSenderStateOrProvinceElement()
    {
        OdfSenderStateOrProvinceElement  _nSenderStateOrProvince = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSenderStateOrProvinceElement.class);
        this.appendChild( _nSenderStateOrProvince);
        return  _nSenderStateOrProvince;
    }                   
               
    /**
    * Create child element "text:author-name".
    */
    public OdfAuthorNameElement createAuthorNameElement()
    {
        OdfAuthorNameElement  _nAuthorName = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAuthorNameElement.class);
        this.appendChild( _nAuthorName);
        return  _nAuthorName;
    }                   
               
    /**
    * Create child element "text:author-initials".
    */
    public OdfAuthorInitialsElement createAuthorInitialsElement()
    {
        OdfAuthorInitialsElement  _nAuthorInitials = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAuthorInitialsElement.class);
        this.appendChild( _nAuthorInitials);
        return  _nAuthorInitials;
    }                   
               
    /**
    * Create child element "text:chapter".
    */
    public OdfChapterElement createChapterElement(OdfChapterDisplayType   _aDisplay, Integer   _aOutlineLevel)
    {
        OdfChapterElement  _nChapter = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfChapterElement.class);
        _nChapter.setDisplay( _aDisplay);
        _nChapter.setOutlineLevel( _aOutlineLevel);
        this.appendChild( _nChapter);
        return  _nChapter;      
    }
    
    /**
    * Create child element "text:file-name".
    */
    public OdfFileNameElement createFileNameElement()
    {
        OdfFileNameElement  _nFileName = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfFileNameElement.class);
        this.appendChild( _nFileName);
        return  _nFileName;
    }                   
               
    /**
    * Create child element "text:template-name".
    */
    public OdfTemplateNameElement createTemplateNameElement()
    {
        OdfTemplateNameElement  _nTemplateName = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTemplateNameElement.class);
        this.appendChild( _nTemplateName);
        return  _nTemplateName;
    }                   
               
    /**
    * Create child element "text:sheet-name".
    */
    public OdfSheetNameElement createSheetNameElement()
    {
        OdfSheetNameElement  _nSheetName = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSheetNameElement.class);
        this.appendChild( _nSheetName);
        return  _nSheetName;
    }                   
               
    /**
    * Create child element "text:variable-set".
    */
    public OdfVariableSetElement createVariableSetElement(OdfValueType   _aValueType, Double   _aValue, String   _aName)
    {
        OdfVariableSetElement  _nVariableSet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfVariableSetElement.class);
        _nVariableSet.setValueType( _aValueType);
        _nVariableSet.setValue( _aValue);
        _nVariableSet.setName( _aName);
        this.appendChild( _nVariableSet);
        return  _nVariableSet;      
    }
    
    /**
    * Create child element "text:variable-set".
    */
    public OdfVariableSetElement createVariableSetElement(OdfValueType   _aValueType, XMLGregorianCalendar   _aDateValue, String   _aName)
    {
        OdfVariableSetElement  _nVariableSet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfVariableSetElement.class);
        _nVariableSet.setValueType( _aValueType);
        _nVariableSet.setDateValue( _aDateValue);
        _nVariableSet.setName( _aName);
        this.appendChild( _nVariableSet);
        return  _nVariableSet;      
    }
    
    /**
    * Create child element "text:variable-set".
    */
    public OdfVariableSetElement createVariableSetElement(OdfValueType   _aValueType, Duration   _aTimeValue, String   _aName)
    {
        OdfVariableSetElement  _nVariableSet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfVariableSetElement.class);
        _nVariableSet.setValueType( _aValueType);
        _nVariableSet.setTimeValue( _aTimeValue);
        _nVariableSet.setName( _aName);
        this.appendChild( _nVariableSet);
        return  _nVariableSet;      
    }
    
    /**
    * Create child element "text:variable-set".
    */
    public OdfVariableSetElement createVariableSetElement(OdfValueType   _aValueType, Boolean   _aBooleanValue, String   _aName)
    {
        OdfVariableSetElement  _nVariableSet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfVariableSetElement.class);
        _nVariableSet.setValueType( _aValueType);
        _nVariableSet.setBooleanValue( _aBooleanValue);
        _nVariableSet.setName( _aName);
        this.appendChild( _nVariableSet);
        return  _nVariableSet;      
    }
    
    /**
    * Create child element "text:variable-set".
    */
    public OdfVariableSetElement createVariableSetElement(OdfValueType   _aValueType, String   _aName)
    {
        OdfVariableSetElement  _nVariableSet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfVariableSetElement.class);
        _nVariableSet.setValueType( _aValueType);
        _nVariableSet.setName( _aName);
        this.appendChild( _nVariableSet);
        return  _nVariableSet;      
    }
    
    /**
    * Create child element "text:variable-get".
    */
    public OdfVariableGetElement createVariableGetElement(String   _aName)
    {
        OdfVariableGetElement  _nVariableGet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfVariableGetElement.class);
        _nVariableGet.setName( _aName);
        this.appendChild( _nVariableGet);
        return  _nVariableGet;      
    }
    
    /**
    * Create child element "text:variable-input".
    */
    public OdfVariableInputElement createVariableInputElement(String   _aName, OdfValueType   _aValueType)
    {
        OdfVariableInputElement  _nVariableInput = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfVariableInputElement.class);
        _nVariableInput.setName( _aName);
        _nVariableInput.setValueType( _aValueType);
        this.appendChild( _nVariableInput);
        return  _nVariableInput;      
    }
    
    /**
    * Create child element "text:user-field-get".
    */
    public OdfUserFieldGetElement createUserFieldGetElement(String   _aName)
    {
        OdfUserFieldGetElement  _nUserFieldGet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldGetElement.class);
        _nUserFieldGet.setName( _aName);
        this.appendChild( _nUserFieldGet);
        return  _nUserFieldGet;      
    }
    
    /**
    * Create child element "text:user-field-input".
    */
    public OdfUserFieldInputElement createUserFieldInputElement(String   _aName)
    {
        OdfUserFieldInputElement  _nUserFieldInput = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldInputElement.class);
        _nUserFieldInput.setName( _aName);
        this.appendChild( _nUserFieldInput);
        return  _nUserFieldInput;      
    }
    
    /**
    * Create child element "text:sequence".
    */
    public OdfSequenceElement createSequenceElement(String   _aName)
    {
        OdfSequenceElement  _nSequence = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSequenceElement.class);
        _nSequence.setName( _aName);
        this.appendChild( _nSequence);
        return  _nSequence;      
    }
    
    /**
    * Create child element "text:expression".
    */
    public OdfExpressionElement createExpressionElement()
    {
        OdfExpressionElement  _nExpression = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfExpressionElement.class);
        this.appendChild( _nExpression);
        return  _nExpression;
    }                   
               
    /**
    * Create child element "text:text-input".
    */
    public OdfTextInputElement createTextInputElement()
    {
        OdfTextInputElement  _nTextInput = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTextInputElement.class);
        this.appendChild( _nTextInput);
        return  _nTextInput;
    }                   
               
    /**
    * Create child element "text:initial-creator".
    */
    public OdfInitialCreatorElement createInitialCreatorElement()
    {
        OdfInitialCreatorElement  _nInitialCreator = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfInitialCreatorElement.class);
        this.appendChild( _nInitialCreator);
        return  _nInitialCreator;
    }                   
               
    /**
    * Create child element "text:creation-date".
    */
    public OdfCreationDateElement createCreationDateElement()
    {
        OdfCreationDateElement  _nCreationDate = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfCreationDateElement.class);
        this.appendChild( _nCreationDate);
        return  _nCreationDate;
    }                   
               
    /**
    * Create child element "text:creation-time".
    */
    public OdfCreationTimeElement createCreationTimeElement()
    {
        OdfCreationTimeElement  _nCreationTime = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfCreationTimeElement.class);
        this.appendChild( _nCreationTime);
        return  _nCreationTime;
    }                   
               
    /**
    * Create child element "text:description".
    */
    public OdfDescriptionElement createDescriptionElement()
    {
        OdfDescriptionElement  _nDescription = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDescriptionElement.class);
        this.appendChild( _nDescription);
        return  _nDescription;
    }                   
               
    /**
    * Create child element "text:user-defined".
    */
    public OdfUserDefinedElement createUserDefinedElement()
    {
        OdfUserDefinedElement  _nUserDefined = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserDefinedElement.class);
        this.appendChild( _nUserDefined);
        return  _nUserDefined;
    }                   
               
    /**
    * Create child element "text:print-time".
    */
    public OdfPrintTimeElement createPrintTimeElement()
    {
        OdfPrintTimeElement  _nPrintTime = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPrintTimeElement.class);
        this.appendChild( _nPrintTime);
        return  _nPrintTime;
    }                   
               
    /**
    * Create child element "text:print-date".
    */
    public OdfPrintDateElement createPrintDateElement()
    {
        OdfPrintDateElement  _nPrintDate = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPrintDateElement.class);
        this.appendChild( _nPrintDate);
        return  _nPrintDate;
    }                   
               
    /**
    * Create child element "text:printed-by".
    */
    public OdfPrintedByElement createPrintedByElement()
    {
        OdfPrintedByElement  _nPrintedBy = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPrintedByElement.class);
        this.appendChild( _nPrintedBy);
        return  _nPrintedBy;
    }                   
               
    /**
    * Create child element "text:title".
    */
    public OdfTitleElement createTitleElement()
    {
        OdfTitleElement  _nTitle = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTitleElement.class);
        this.appendChild( _nTitle);
        return  _nTitle;
    }                   
               
    /**
    * Create child element "text:subject".
    */
    public OdfSubjectElement createSubjectElement()
    {
        OdfSubjectElement  _nSubject = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSubjectElement.class);
        this.appendChild( _nSubject);
        return  _nSubject;
    }                   
               
    /**
    * Create child element "text:keywords".
    */
    public OdfKeywordsElement createKeywordsElement()
    {
        OdfKeywordsElement  _nKeywords = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfKeywordsElement.class);
        this.appendChild( _nKeywords);
        return  _nKeywords;
    }                   
               
    /**
    * Create child element "text:editing-cycles".
    */
    public OdfEditingCyclesElement createEditingCyclesElement()
    {
        OdfEditingCyclesElement  _nEditingCycles = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfEditingCyclesElement.class);
        this.appendChild( _nEditingCycles);
        return  _nEditingCycles;
    }                   
               
    /**
    * Create child element "text:editing-duration".
    */
    public OdfEditingDurationElement createEditingDurationElement()
    {
        OdfEditingDurationElement  _nEditingDuration = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfEditingDurationElement.class);
        this.appendChild( _nEditingDuration);
        return  _nEditingDuration;
    }                   
               
    /**
    * Create child element "text:modification-time".
    */
    public OdfModificationTimeElement createModificationTimeElement()
    {
        OdfModificationTimeElement  _nModificationTime = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfModificationTimeElement.class);
        this.appendChild( _nModificationTime);
        return  _nModificationTime;
    }                   
               
    /**
    * Create child element "text:modification-date".
    */
    public OdfModificationDateElement createModificationDateElement()
    {
        OdfModificationDateElement  _nModificationDate = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfModificationDateElement.class);
        this.appendChild( _nModificationDate);
        return  _nModificationDate;
    }                   
               
    /**
    * Create child element "text:creator".
    */
    public OdfCreatorElement createCreatorElement()
    {
        OdfCreatorElement  _nCreator = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfCreatorElement.class);
        this.appendChild( _nCreator);
        return  _nCreator;
    }                   
               
    /**
    * Create child element "text:database-display".
    */
    public OdfDatabaseDisplayElement createDatabaseDisplayElement(String   _aTableName, String   _aColumnName)
    {
        OdfDatabaseDisplayElement  _nDatabaseDisplay = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDatabaseDisplayElement.class);
        _nDatabaseDisplay.setTableName( _aTableName);
        _nDatabaseDisplay.setColumnName( _aColumnName);
        this.appendChild( _nDatabaseDisplay);
        return  _nDatabaseDisplay;      
    }
    
    /**
    * Create child element "text:database-next".
    */
    public OdfDatabaseNextElement createDatabaseNextElement(String   _aTableName)
    {
        OdfDatabaseNextElement  _nDatabaseNext = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDatabaseNextElement.class);
        _nDatabaseNext.setTableName( _aTableName);
        this.appendChild( _nDatabaseNext);
        return  _nDatabaseNext;      
    }
    
    /**
    * Create child element "text:database-row-select".
    */
    public OdfDatabaseRowSelectElement createDatabaseRowSelectElement(String   _aTableName)
    {
        OdfDatabaseRowSelectElement  _nDatabaseRowSelect = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDatabaseRowSelectElement.class);
        _nDatabaseRowSelect.setTableName( _aTableName);
        this.appendChild( _nDatabaseRowSelect);
        return  _nDatabaseRowSelect;      
    }
    
    /**
    * Create child element "text:database-row-number".
    */
    public OdfDatabaseRowNumberElement createDatabaseRowNumberElement(String   _aTableName)
    {
        OdfDatabaseRowNumberElement  _nDatabaseRowNumber = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDatabaseRowNumberElement.class);
        _nDatabaseRowNumber.setTableName( _aTableName);
        this.appendChild( _nDatabaseRowNumber);
        return  _nDatabaseRowNumber;      
    }
    
    /**
    * Create child element "text:database-name".
    */
    public OdfDatabaseNameElement createDatabaseNameElement(String   _aTableName)
    {
        OdfDatabaseNameElement  _nDatabaseName = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDatabaseNameElement.class);
        _nDatabaseName.setTableName( _aTableName);
        this.appendChild( _nDatabaseName);
        return  _nDatabaseName;      
    }
    
    /**
    * Create child element "text:page-variable-set".
    */
    public OdfPageVariableSetElement createPageVariableSetElement()
    {
        OdfPageVariableSetElement  _nPageVariableSet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPageVariableSetElement.class);
        this.appendChild( _nPageVariableSet);
        return  _nPageVariableSet;
    }                   
               
    /**
    * Create child element "text:page-variable-get".
    */
    public OdfPageVariableGetElement createPageVariableGetElement()
    {
        OdfPageVariableGetElement  _nPageVariableGet = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPageVariableGetElement.class);
        this.appendChild( _nPageVariableGet);
        return  _nPageVariableGet;
    }                   
               
    /**
    * Create child element "text:placeholder".
    */
    public OdfPlaceholderElement createPlaceholderElement(OdfPlaceholderType   _aPlaceholderType)
    {
        OdfPlaceholderElement  _nPlaceholder = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPlaceholderElement.class);
        _nPlaceholder.setPlaceholderType( _aPlaceholderType);
        this.appendChild( _nPlaceholder);
        return  _nPlaceholder;      
    }
    
    /**
    * Create child element "text:conditional-text".
    */
    public OdfConditionalTextElement createConditionalTextElement(String   _aCondition, String   _aStringValueIfTrue, String   _aStringValueIfFalse)
    {
        OdfConditionalTextElement  _nConditionalText = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfConditionalTextElement.class);
        _nConditionalText.setCondition( _aCondition);
        _nConditionalText.setStringValueIfTrue( _aStringValueIfTrue);
        _nConditionalText.setStringValueIfFalse( _aStringValueIfFalse);
        this.appendChild( _nConditionalText);
        return  _nConditionalText;      
    }
    
    /**
    * Create child element "text:hidden-text".
    */
    public OdfHiddenTextElement createHiddenTextElement(String   _aCondition, String   _aStringValue)
    {
        OdfHiddenTextElement  _nHiddenText = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfHiddenTextElement.class);
        _nHiddenText.setCondition( _aCondition);
        _nHiddenText.setStringValue( _aStringValue);
        this.appendChild( _nHiddenText);
        return  _nHiddenText;      
    }
    
    /**
    * Create child element "text:note-ref".
    */
    public OdfNoteRefElement createNoteRefElement(OdfNoteClassType   _aNoteClass)
    {
        OdfNoteRefElement  _nNoteRef = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfNoteRefElement.class);
        _nNoteRef.setNoteClass( _aNoteClass);
        this.appendChild( _nNoteRef);
        return  _nNoteRef;      
    }
    
    /**
    * Create child element "text:sequence-ref".
    */
    public OdfSequenceRefElement createSequenceRefElement()
    {
        OdfSequenceRefElement  _nSequenceRef = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSequenceRefElement.class);
        this.appendChild( _nSequenceRef);
        return  _nSequenceRef;
    }                   
               
    /**
    * Create child element "text:script".
    */
    public OdfScriptElement createScriptElement()
    {
        OdfScriptElement  _nScript = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfScriptElement.class);
        this.appendChild( _nScript);
        return  _nScript;
    }                   
               
    /**
    * Create child element "text:execute-macro".
    */
    public OdfExecuteMacroElement createExecuteMacroElement()
    {
        OdfExecuteMacroElement  _nExecuteMacro = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfExecuteMacroElement.class);
        this.appendChild( _nExecuteMacro);
        return  _nExecuteMacro;
    }                   
               
    /**
    * Create child element "text:hidden-paragraph".
    */
    public OdfHiddenParagraphElement createHiddenParagraphElement(String   _aCondition)
    {
        OdfHiddenParagraphElement  _nHiddenParagraph = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfHiddenParagraphElement.class);
        _nHiddenParagraph.setCondition( _aCondition);
        this.appendChild( _nHiddenParagraph);
        return  _nHiddenParagraph;      
    }
    
    /**
    * Create child element "text:dde-connection".
    */
    public OdfDdeConnectionElement createDdeConnectionElement(String   _aConnectionName)
    {
        OdfDdeConnectionElement  _nDdeConnection = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDdeConnectionElement.class);
        _nDdeConnection.setConnectionName( _aConnectionName);
        this.appendChild( _nDdeConnection);
        return  _nDdeConnection;      
    }
    
    /**
    * Create child element "text:measure".
    */
    public org.odftoolkit.odfdom.dom.element.text.OdfMeasureElement createtextMeasureElement(OdfKindType   _aKind)
    {
        org.odftoolkit.odfdom.dom.element.text.OdfMeasureElement  _nMeasure = ((OdfFileDom)this.ownerDocument).createOdfElement(org.odftoolkit.odfdom.dom.element.text.OdfMeasureElement.class);
        _nMeasure.setKind( _aKind);
        this.appendChild( _nMeasure);
        return  _nMeasure;      
    }
    
    /**
    * Create child element "text:table-formula".
    */
    public OdfTableFormulaElement createTableFormulaElement()
    {
        OdfTableFormulaElement  _nTableFormula = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTableFormulaElement.class);
        this.appendChild( _nTableFormula);
        return  _nTableFormula;
    }                   
               
    /**
    * Create child element "text:meta-field".
    */
    public OdfMetaFieldElement createMetaFieldElement(String   _aXmlid)
    {
        OdfMetaFieldElement  _nMetaField = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfMetaFieldElement.class);
        _nMetaField.setXmlid( _aXmlid);
        this.appendChild( _nMetaField);
        return  _nMetaField;      
    }
    
    /**
    * Create child element "text:toc-mark-start".
    */
    public OdfTocMarkStartElement createTocMarkStartElement(String   _aId)
    {
        OdfTocMarkStartElement  _nTocMarkStart = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTocMarkStartElement.class);
        _nTocMarkStart.setId( _aId);
        this.appendChild( _nTocMarkStart);
        return  _nTocMarkStart;      
    }
    
    /**
    * Create child element "text:toc-mark-end".
    */
    public OdfTocMarkEndElement createTocMarkEndElement(String   _aId)
    {
        OdfTocMarkEndElement  _nTocMarkEnd = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTocMarkEndElement.class);
        _nTocMarkEnd.setId( _aId);
        this.appendChild( _nTocMarkEnd);
        return  _nTocMarkEnd;      
    }
    
    /**
    * Create child element "text:toc-mark".
    */
    public OdfTocMarkElement createTocMarkElement(String   _aStringValue)
    {
        OdfTocMarkElement  _nTocMark = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTocMarkElement.class);
        _nTocMark.setStringValue( _aStringValue);
        this.appendChild( _nTocMark);
        return  _nTocMark;      
    }
    
    /**
    * Create child element "text:user-index-mark-start".
    */
    public OdfUserIndexMarkStartElement createUserIndexMarkStartElement(String   _aId, String   _aIndexName)
    {
        OdfUserIndexMarkStartElement  _nUserIndexMarkStart = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserIndexMarkStartElement.class);
        _nUserIndexMarkStart.setId( _aId);
        _nUserIndexMarkStart.setIndexName( _aIndexName);
        this.appendChild( _nUserIndexMarkStart);
        return  _nUserIndexMarkStart;      
    }
    
    /**
    * Create child element "text:user-index-mark-end".
    */
    public OdfUserIndexMarkEndElement createUserIndexMarkEndElement(String   _aId)
    {
        OdfUserIndexMarkEndElement  _nUserIndexMarkEnd = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserIndexMarkEndElement.class);
        _nUserIndexMarkEnd.setId( _aId);
        this.appendChild( _nUserIndexMarkEnd);
        return  _nUserIndexMarkEnd;      
    }
    
    /**
    * Create child element "text:user-index-mark".
    */
    public OdfUserIndexMarkElement createUserIndexMarkElement(String   _aStringValue, String   _aIndexName)
    {
        OdfUserIndexMarkElement  _nUserIndexMark = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserIndexMarkElement.class);
        _nUserIndexMark.setStringValue( _aStringValue);
        _nUserIndexMark.setIndexName( _aIndexName);
        this.appendChild( _nUserIndexMark);
        return  _nUserIndexMark;      
    }
    
    /**
    * Create child element "text:alphabetical-index-mark-start".
    */
    public OdfAlphabeticalIndexMarkStartElement createAlphabeticalIndexMarkStartElement(String   _aId)
    {
        OdfAlphabeticalIndexMarkStartElement  _nAlphabeticalIndexMarkStart = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAlphabeticalIndexMarkStartElement.class);
        _nAlphabeticalIndexMarkStart.setId( _aId);
        this.appendChild( _nAlphabeticalIndexMarkStart);
        return  _nAlphabeticalIndexMarkStart;      
    }
    
    /**
    * Create child element "text:alphabetical-index-mark-end".
    */
    public OdfAlphabeticalIndexMarkEndElement createAlphabeticalIndexMarkEndElement(String   _aId)
    {
        OdfAlphabeticalIndexMarkEndElement  _nAlphabeticalIndexMarkEnd = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAlphabeticalIndexMarkEndElement.class);
        _nAlphabeticalIndexMarkEnd.setId( _aId);
        this.appendChild( _nAlphabeticalIndexMarkEnd);
        return  _nAlphabeticalIndexMarkEnd;      
    }
    
    /**
    * Create child element "text:alphabetical-index-mark".
    */
    public OdfAlphabeticalIndexMarkElement createAlphabeticalIndexMarkElement(String   _aStringValue)
    {
        OdfAlphabeticalIndexMarkElement  _nAlphabeticalIndexMark = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAlphabeticalIndexMarkElement.class);
        _nAlphabeticalIndexMark.setStringValue( _aStringValue);
        this.appendChild( _nAlphabeticalIndexMark);
        return  _nAlphabeticalIndexMark;      
    }
    
    /**
    * Create child element "text:bibliography-mark".
    */
    public OdfBibliographyMarkElement createBibliographyMarkElement(OdfBibliographyType   _aBibliographyType)
    {
        OdfBibliographyMarkElement  _nBibliographyMark = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfBibliographyMarkElement.class);
        _nBibliographyMark.setBibliographyType( _aBibliographyType);
        this.appendChild( _nBibliographyMark);
        return  _nBibliographyMark;      
    }
    
    /**
    * Create child element "presentation:header".
    */
    public OdfHeaderElement createHeaderElement()
    {
        OdfHeaderElement  _nHeader = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfHeaderElement.class);
        this.appendChild( _nHeader);
        return  _nHeader;
    }                   
               
    /**
    * Create child element "presentation:footer".
    */
    public OdfFooterElement createFooterElement()
    {
        OdfFooterElement  _nFooter = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfFooterElement.class);
        this.appendChild( _nFooter);
        return  _nFooter;
    }                   
               
    /**
    * Create child element "presentation:date-time".
    */
    public OdfDateTimeElement createDateTimeElement()
    {
        OdfDateTimeElement  _nDateTime = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDateTimeElement.class);
        this.appendChild( _nDateTime);
        return  _nDateTime;
    }                   
               
}
