/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.text;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;
import org.odftoolkit.odfdom.dom.type.OdfBoolean;


/**
 * ODF DOM Element implementation for element "<text:bibliography-configuration>".
 */
public abstract class OdfBibliographyConfigurationElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.TEXT, "bibliography-configuration" );

    public OdfBibliographyConfigurationElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
     * Get value of attribute "text:prefix".
     */
    public String getPrefixText()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "prefix" ) );
    }

    /**
     * Set value of attribute "text:prefix".
     */
    public void setPrefixText( String _aPrefixText )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "prefix" ), _aPrefixText );
    }

    /**
     * Get value of attribute "text:suffix".
     */
    public String getSuffixText()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "suffix" ) );
    }

    /**
     * Set value of attribute "text:suffix".
     */
    public void setSuffixText( String _aSuffixText )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "suffix" ), _aSuffixText );
    }

    /**
     * Get value of attribute "text:numbered-entries".
     */
    public Boolean getNumberedEntries()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "numbered-entries" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:numbered-entries".
     */
    public void setNumberedEntries( Boolean _aNumberedEntries )
    {                    
        String aStringVal = OdfBoolean.toString( _aNumberedEntries );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "numbered-entries" ), aStringVal );
    }

    /**
     * Get value of attribute "text:sort-by-position".
     */
    public Boolean getSortByPosition()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "sort-by-position" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "text:sort-by-position".
     */
    public void setSortByPosition( Boolean _aSortByPosition )
    {                    
        String aStringVal = OdfBoolean.toString( _aSortByPosition );
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "sort-by-position" ), aStringVal );
    }

    /**
     * Get value of attribute "fo:language".
     */
    public String getLanguage()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.FO, "language" ) );
    }

    /**
     * Set value of attribute "fo:language".
     */
    public void setLanguage( String _aLanguage )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.FO, "language" ), _aLanguage );
    }

    /**
     * Get value of attribute "fo:country".
     */
    public String getCountry()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.FO, "country" ) );
    }

    /**
     * Set value of attribute "fo:country".
     */
    public void setCountry( String _aCountry )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.FO, "country" ), _aCountry );
    }

    /**
     * Get value of attribute "fo:script".
     */
    public String getScript()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.FO, "script" ) );
    }

    /**
     * Set value of attribute "fo:script".
     */
    public void setScript( String _aScript )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.FO, "script" ), _aScript );
    }

    /**
     * Get value of attribute "style:rfc-language-tag".
     */
    public String getRfcLanguageTag()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "rfc-language-tag" ) );
    }

    /**
     * Set value of attribute "style:rfc-language-tag".
     */
    public void setRfcLanguageTag( String _aRfcLanguageTag )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "rfc-language-tag" ), _aRfcLanguageTag );
    }

    /**
     * Get value of attribute "text:sort-algorithm".
     */
    public String getSortAlgorithm()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TEXT, "sort-algorithm" ) );
    }

    /**
     * Set value of attribute "text:sort-algorithm".
     */
    public void setSortAlgorithm( String _aSortAlgorithm )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TEXT, "sort-algorithm" ), _aSortAlgorithm );
    }

}
