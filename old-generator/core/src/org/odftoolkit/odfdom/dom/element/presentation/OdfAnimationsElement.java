/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.presentation;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;

;

/**
 * ODF DOM Element implementation for element "<presentation:animations>".
 */
public abstract class OdfAnimationsElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.PRESENTATION, "animations" );

    public OdfAnimationsElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
    * Create child element "presentation:show-shape".
    */
    public OdfShowShapeElement createShowShapeElement(String   _aShapeId)
    {
        OdfShowShapeElement  _nShowShape = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfShowShapeElement.class);
        _nShowShape.setShapeId( _aShapeId);
        this.appendChild( _nShowShape);
        return  _nShowShape;      
    }
    
    /**
    * Create child element "presentation:show-text".
    */
    public OdfShowTextElement createShowTextElement(String   _aShapeId)
    {
        OdfShowTextElement  _nShowText = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfShowTextElement.class);
        _nShowText.setShapeId( _aShapeId);
        this.appendChild( _nShowText);
        return  _nShowText;      
    }
    
    /**
    * Create child element "presentation:hide-shape".
    */
    public OdfHideShapeElement createHideShapeElement(String   _aShapeId)
    {
        OdfHideShapeElement  _nHideShape = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfHideShapeElement.class);
        _nHideShape.setShapeId( _aShapeId);
        this.appendChild( _nHideShape);
        return  _nHideShape;      
    }
    
    /**
    * Create child element "presentation:hide-text".
    */
    public OdfHideTextElement createHideTextElement(String   _aShapeId)
    {
        OdfHideTextElement  _nHideText = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfHideTextElement.class);
        _nHideText.setShapeId( _aShapeId);
        this.appendChild( _nHideText);
        return  _nHideText;      
    }
    
    /**
    * Create child element "presentation:dim".
    */
    public OdfDimElement createDimElement(String   _aShapeId, String   _aColor)
    {
        OdfDimElement  _nDim = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDimElement.class);
        _nDim.setShapeId( _aShapeId);
        _nDim.setColor( _aColor);
        this.appendChild( _nDim);
        return  _nDim;      
    }
    
    /**
    * Create child element "presentation:play".
    */
    public OdfPlayElement createPlayElement(String   _aShapeId)
    {
        OdfPlayElement  _nPlay = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPlayElement.class);
        _nPlay.setShapeId( _aShapeId);
        this.appendChild( _nPlay);
        return  _nPlay;      
    }
    
    /**
    * Create child element "presentation:animation-group".
    */
    public OdfAnimationGroupElement createAnimationGroupElement()
    {
        OdfAnimationGroupElement  _nAnimationGroup = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAnimationGroupElement.class);
        this.appendChild( _nAnimationGroup);
        return  _nAnimationGroup;
    }                   
               
}
