/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.office;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfContainerElementBase;

import org.odftoolkit.odfdom.dom.element.text.OdfVariableDeclElement;
import org.odftoolkit.odfdom.dom.type.office.OdfValueType;
import org.odftoolkit.odfdom.dom.element.text.OdfSequenceDeclElement;
import org.odftoolkit.odfdom.dom.element.text.OdfUserFieldDeclElement;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.datatype.Duration;
import org.odftoolkit.odfdom.dom.element.text.OdfDdeConnectionDeclElement;
import org.odftoolkit.odfdom.dom.element.text.OdfAlphabeticalIndexAutoMarkFileElement;
import org.odftoolkit.odfdom.dom.element.table.OdfCalculationSettingsElement;
import org.odftoolkit.odfdom.dom.element.table.OdfContentValidationsElement;
import org.odftoolkit.odfdom.dom.element.table.OdfLabelRangesElement;
import org.odftoolkit.odfdom.dom.element.presentation.OdfHeaderDeclElement;
import org.odftoolkit.odfdom.dom.element.presentation.OdfFooterDeclElement;
import org.odftoolkit.odfdom.dom.element.presentation.OdfDateTimeDeclElement;
import org.odftoolkit.odfdom.dom.type.presentation.OdfSourceType;
import org.odftoolkit.odfdom.dom.element.draw.OdfPageElement;
import org.odftoolkit.odfdom.dom.element.presentation.OdfShowElement;
import org.odftoolkit.odfdom.dom.element.table.OdfNamedExpressionsElement;
import org.odftoolkit.odfdom.dom.element.table.OdfDatabaseRangesElement;
import org.odftoolkit.odfdom.dom.element.table.OdfDataPilotTablesElement;
import org.odftoolkit.odfdom.dom.element.table.OdfConsolidationElement;
import org.odftoolkit.odfdom.dom.element.table.OdfDdeLinksElement;

/**
 * ODF DOM Element implementation for element "<office:presentation>".
 */
public abstract class OdfPresentationElement extends OdfContainerElementBase
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.OFFICE, "presentation" );

    public OdfPresentationElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }


    /**
    * Create child element "text:variable-decl".
    */
    public OdfVariableDeclElement createVariableDeclElement(String   _aName, OdfValueType   _aValueType)
    {
        OdfVariableDeclElement  _nVariableDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfVariableDeclElement.class);
        _nVariableDecl.setName( _aName);
        _nVariableDecl.setValueType( _aValueType);
        this.appendChild( _nVariableDecl);
        return  _nVariableDecl;      
    }
    
    /**
    * Create child element "text:sequence-decl".
    */
    public OdfSequenceDeclElement createSequenceDeclElement(String   _aName, Integer   _aDisplayOutlineLevel)
    {
        OdfSequenceDeclElement  _nSequenceDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSequenceDeclElement.class);
        _nSequenceDecl.setName( _aName);
        _nSequenceDecl.setDisplayOutlineLevel( _aDisplayOutlineLevel);
        this.appendChild( _nSequenceDecl);
        return  _nSequenceDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, Double   _aValue, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setValue( _aValue);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, XMLGregorianCalendar   _aDateValue, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setDateValue( _aDateValue);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, Duration   _aTimeValue, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setTimeValue( _aTimeValue);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, Boolean   _aBooleanValue, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setBooleanValue( _aBooleanValue);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:user-field-decl".
    */
    public OdfUserFieldDeclElement createUserFieldDeclElement(OdfValueType   _aValueType, String   _aName)
    {
        OdfUserFieldDeclElement  _nUserFieldDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfUserFieldDeclElement.class);
        _nUserFieldDecl.setValueType( _aValueType);
        _nUserFieldDecl.setName( _aName);
        this.appendChild( _nUserFieldDecl);
        return  _nUserFieldDecl;      
    }
    
    /**
    * Create child element "text:dde-connection-decl".
    */
    public OdfDdeConnectionDeclElement createDdeConnectionDeclElement(String   _aName, String   _aDdeApplication, String   _aDdeTopic, String   _aDdeItem)
    {
        OdfDdeConnectionDeclElement  _nDdeConnectionDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDdeConnectionDeclElement.class);
        _nDdeConnectionDecl.setName( _aName);
        _nDdeConnectionDecl.setDdeApplication( _aDdeApplication);
        _nDdeConnectionDecl.setDdeTopic( _aDdeTopic);
        _nDdeConnectionDecl.setDdeItem( _aDdeItem);
        this.appendChild( _nDdeConnectionDecl);
        return  _nDdeConnectionDecl;      
    }
    
    /**
    * Create child element "text:alphabetical-index-auto-mark-file".
    */
    public OdfAlphabeticalIndexAutoMarkFileElement createAlphabeticalIndexAutoMarkFileElement(String   _aHref)
    {
        OdfAlphabeticalIndexAutoMarkFileElement  _nAlphabeticalIndexAutoMarkFile = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAlphabeticalIndexAutoMarkFileElement.class);
        _nAlphabeticalIndexAutoMarkFile.setHref( _aHref);
        this.appendChild( _nAlphabeticalIndexAutoMarkFile);
        return  _nAlphabeticalIndexAutoMarkFile;      
    }
    
    /**
    * Create child element "table:calculation-settings".
    */
    public OdfCalculationSettingsElement createCalculationSettingsElement()
    {
        OdfCalculationSettingsElement  _nCalculationSettings = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfCalculationSettingsElement.class);
        this.appendChild( _nCalculationSettings);
        return  _nCalculationSettings;
    }                   
               
    /**
    * Create child element "table:content-validations".
    */
    public OdfContentValidationsElement createContentValidationsElement()
    {
        OdfContentValidationsElement  _nContentValidations = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfContentValidationsElement.class);
        this.appendChild( _nContentValidations);
        return  _nContentValidations;
    }                   
               
    /**
    * Create child element "table:label-ranges".
    */
    public OdfLabelRangesElement createLabelRangesElement()
    {
        OdfLabelRangesElement  _nLabelRanges = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfLabelRangesElement.class);
        this.appendChild( _nLabelRanges);
        return  _nLabelRanges;
    }                   
               
    /**
    * Create child element "presentation:header-decl".
    */
    public OdfHeaderDeclElement createHeaderDeclElement(String   _aName)
    {
        OdfHeaderDeclElement  _nHeaderDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfHeaderDeclElement.class);
        _nHeaderDecl.setName( _aName);
        this.appendChild( _nHeaderDecl);
        return  _nHeaderDecl;      
    }
    
    /**
    * Create child element "presentation:footer-decl".
    */
    public OdfFooterDeclElement createFooterDeclElement(String   _aName)
    {
        OdfFooterDeclElement  _nFooterDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfFooterDeclElement.class);
        _nFooterDecl.setName( _aName);
        this.appendChild( _nFooterDecl);
        return  _nFooterDecl;      
    }
    
    /**
    * Create child element "presentation:date-time-decl".
    */
    public OdfDateTimeDeclElement createDateTimeDeclElement(String   _aName, OdfSourceType   _aSource)
    {
        OdfDateTimeDeclElement  _nDateTimeDecl = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDateTimeDeclElement.class);
        _nDateTimeDecl.setName( _aName);
        _nDateTimeDecl.setSource( _aSource);
        this.appendChild( _nDateTimeDecl);
        return  _nDateTimeDecl;      
    }
    
    /**
    * Create child element "draw:page".
    */
    public OdfPageElement createPageElement(String   _aMasterPageName)
    {
        OdfPageElement  _nPage = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfPageElement.class);
        _nPage.setMasterPageName( _aMasterPageName);
        this.appendChild( _nPage);
        return  _nPage;      
    }
    
    /**
    * Create child element "presentation:show".
    */
    public OdfShowElement createShowElement(String   _aName, String   _aPages)
    {
        OdfShowElement  _nShow = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfShowElement.class);
        _nShow.setName( _aName);
        _nShow.setPages( _aPages);
        this.appendChild( _nShow);
        return  _nShow;      
    }
    
    /**
    * Create child element "table:named-expressions".
    */
    public OdfNamedExpressionsElement createNamedExpressionsElement()
    {
        OdfNamedExpressionsElement  _nNamedExpressions = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfNamedExpressionsElement.class);
        this.appendChild( _nNamedExpressions);
        return  _nNamedExpressions;
    }                   
               
    /**
    * Create child element "table:database-ranges".
    */
    public OdfDatabaseRangesElement createDatabaseRangesElement()
    {
        OdfDatabaseRangesElement  _nDatabaseRanges = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDatabaseRangesElement.class);
        this.appendChild( _nDatabaseRanges);
        return  _nDatabaseRanges;
    }                   
               
    /**
    * Create child element "table:data-pilot-tables".
    */
    public OdfDataPilotTablesElement createDataPilotTablesElement()
    {
        OdfDataPilotTablesElement  _nDataPilotTables = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDataPilotTablesElement.class);
        this.appendChild( _nDataPilotTables);
        return  _nDataPilotTables;
    }                   
               
    /**
    * Create child element "table:consolidation".
    */
    public OdfConsolidationElement createConsolidationElement(String   _aFunction, String   _aSourceCellRangeAddresses, String   _aTargetCellAddress)
    {
        OdfConsolidationElement  _nConsolidation = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfConsolidationElement.class);
        _nConsolidation.setFunction( _aFunction);
        _nConsolidation.setSourceCellRangeAddresses( _aSourceCellRangeAddresses);
        _nConsolidation.setTargetCellAddress( _aTargetCellAddress);
        this.appendChild( _nConsolidation);
        return  _nConsolidation;      
    }
    
    /**
    * Create child element "table:dde-links".
    */
    public OdfDdeLinksElement createDdeLinksElement()
    {
        OdfDdeLinksElement  _nDdeLinks = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDdeLinksElement.class);
        this.appendChild( _nDdeLinks);
        return  _nDdeLinks;
    }                   
               
}
