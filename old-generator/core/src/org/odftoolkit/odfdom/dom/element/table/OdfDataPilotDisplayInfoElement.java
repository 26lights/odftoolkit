/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.table;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;
import org.odftoolkit.odfdom.dom.type.OdfBoolean;
import org.odftoolkit.odfdom.dom.type.OdfNonNegativeInteger;
import org.odftoolkit.odfdom.dom.type.table.OdfDisplayMemberModeType;

;

/**
 * ODF DOM Element implementation for element "<table:data-pilot-display-info>".
 */
public abstract class OdfDataPilotDisplayInfoElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.TABLE, "data-pilot-display-info" );

    public OdfDataPilotDisplayInfoElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialize mandatory attributes.
     */
    public void init(Boolean _aEnabled, String _aDataField, Integer _aMemberCount, OdfDisplayMemberModeType _aDisplayMemberMode)
    {
        setEnabled( _aEnabled );
        setDataField( _aDataField );
        setMemberCount( _aMemberCount );
        setDisplayMemberMode( _aDisplayMemberMode );
    }

    /**
     * Get value of attribute "table:enabled".
     */
    public Boolean getEnabled()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "enabled" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:enabled".
     */
    public void setEnabled( Boolean _aEnabled )
    {                    
        String aStringVal = OdfBoolean.toString( _aEnabled );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "enabled" ), aStringVal );
    }

    /**
     * Get value of attribute "table:data-field".
     */
    public String getDataField()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "data-field" ) );
    }

    /**
     * Set value of attribute "table:data-field".
     */
    public void setDataField( String _aDataField )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "data-field" ), _aDataField );
    }

    /**
     * Get value of attribute "table:member-count".
     */
    public Integer getMemberCount()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "member-count" ) );
        return OdfNonNegativeInteger.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:member-count".
     */
    public void setMemberCount( Integer _aMemberCount )
    {                    
        String aStringVal = OdfNonNegativeInteger.toString( _aMemberCount );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "member-count" ), aStringVal );
    }

    /**
     * Get value of attribute "table:display-member-mode".
     */
    public OdfDisplayMemberModeType getDisplayMemberMode()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "display-member-mode" ) );
        return OdfDisplayMemberModeType.enumValueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:display-member-mode".
     */
    public void setDisplayMemberMode( OdfDisplayMemberModeType _aDisplayMemberMode )
    {                    
        String aStringVal = OdfDisplayMemberModeType.toString( _aDisplayMemberMode );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "display-member-mode" ), aStringVal );
    }

}
