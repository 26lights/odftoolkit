/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.number;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;
import org.odftoolkit.odfdom.dom.type.OdfStyleName;
import org.odftoolkit.odfdom.dom.type.OdfBoolean;
import org.odftoolkit.odfdom.dom.type.number.OdfTransliterationStyleType;
import org.odftoolkit.odfdom.dom.type.number.OdfFormatSourceType;

import org.odftoolkit.odfdom.dom.element.style.OdfTextPropertiesElement;
import org.odftoolkit.odfdom.dom.element.style.OdfMapElement;

/**
 * ODF DOM Element implementation for element "<number:date-style>".
 */
public abstract class OdfDateStyleElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.NUMBER, "date-style" );

    public OdfDateStyleElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialize mandatory attributes.
     */
    public void init(String _aName)
    {
        setName( _aName );
    }

    /**
     * Get value of attribute "style:name".
     */
    public String getName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "style:name".
     */
    public void setName( String _aName )
    {                    
        String aStringVal = OdfStyleName.toString( _aName );
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "name" ), aStringVal );
    }

    /**
     * Get value of attribute "number:language".
     */
    public String getLanguage()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "language" ) );
    }

    /**
     * Set value of attribute "number:language".
     */
    public void setLanguage( String _aLanguage )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "language" ), _aLanguage );
    }

    /**
     * Get value of attribute "number:country".
     */
    public String getCountry()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "country" ) );
    }

    /**
     * Set value of attribute "number:country".
     */
    public void setCountry( String _aCountry )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "country" ), _aCountry );
    }

    /**
     * Get value of attribute "number:script".
     */
    public String getScript()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "script" ) );
    }

    /**
     * Set value of attribute "number:script".
     */
    public void setScript( String _aScript )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "script" ), _aScript );
    }

    /**
     * Get value of attribute "number:rfc-language-tag".
     */
    public String getRfcLanguageTag()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "rfc-language-tag" ) );
    }

    /**
     * Set value of attribute "number:rfc-language-tag".
     */
    public void setRfcLanguageTag( String _aRfcLanguageTag )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "rfc-language-tag" ), _aRfcLanguageTag );
    }

    /**
     * Get value of attribute "number:title".
     */
    public String getTitle()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "title" ) );
    }

    /**
     * Set value of attribute "number:title".
     */
    public void setTitle( String _aTitle )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "title" ), _aTitle );
    }

    /**
     * Get value of attribute "style:volatile".
     */
    public Boolean getVolatile()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.STYLE, "volatile" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "style:volatile".
     */
    public void setVolatile( Boolean _aVolatile )
    {                    
        String aStringVal = OdfBoolean.toString( _aVolatile );
        setOdfAttribute( OdfName.get( OdfNamespace.STYLE, "volatile" ), aStringVal );
    }

    /**
     * Get value of attribute "number:transliteration-format".
     */
    public String getTransliterationFormat()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "transliteration-format" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "1";
        }

        return String.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "number:transliteration-format".
     */
    public void setTransliterationFormat( String _aTransliterationFormat )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "transliteration-format" ), _aTransliterationFormat );
    }

    /**
     * Get value of attribute "number:transliteration-language".
     */
    public String getTransliterationLanguage()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "transliteration-language" ) );
    }

    /**
     * Set value of attribute "number:transliteration-language".
     */
    public void setTransliterationLanguage( String _aTransliterationLanguage )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "transliteration-language" ), _aTransliterationLanguage );
    }

    /**
     * Get value of attribute "number:transliteration-country".
     */
    public String getTransliterationCountry()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "transliteration-country" ) );
    }

    /**
     * Set value of attribute "number:transliteration-country".
     */
    public void setTransliterationCountry( String _aTransliterationCountry )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "transliteration-country" ), _aTransliterationCountry );
    }

    /**
     * Get value of attribute "number:transliteration-style".
     */
    public OdfTransliterationStyleType getTransliterationStyle()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "transliteration-style" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "short";
        }

        return OdfTransliterationStyleType.enumValueOf( aStringVal);
    }

    /**
     * Set value of attribute "number:transliteration-style".
     */
    public void setTransliterationStyle( OdfTransliterationStyleType _aTransliterationStyle )
    {                    
        String aStringVal = OdfTransliterationStyleType.toString( _aTransliterationStyle );
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "transliteration-style" ), aStringVal );
    }

    /**
     * Get value of attribute "number:automatic-order".
     */
    public Boolean getAutomaticOrder()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "automatic-order" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "number:automatic-order".
     */
    public void setAutomaticOrder( Boolean _aAutomaticOrder )
    {                    
        String aStringVal = OdfBoolean.toString( _aAutomaticOrder );
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "automatic-order" ), aStringVal );
    }

    /**
     * Get value of attribute "number:format-source".
     */
    public OdfFormatSourceType getFormatSource()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "format-source" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "fixed";
        }

        return OdfFormatSourceType.enumValueOf( aStringVal);
    }

    /**
     * Set value of attribute "number:format-source".
     */
    public void setFormatSource( OdfFormatSourceType _aFormatSource )
    {                    
        String aStringVal = OdfFormatSourceType.toString( _aFormatSource );
        setOdfAttribute( OdfName.get( OdfNamespace.NUMBER, "format-source" ), aStringVal );
    }

    /**
    * Create child element "style:text-properties".
    */
    public OdfTextPropertiesElement createTextPropertiesElement(String   _aDisplay)
    {
        OdfTextPropertiesElement  _nTextProperties = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTextPropertiesElement.class);
        this.appendChild( _nTextProperties);
        return  _nTextProperties;      
    }
    
    /**
    * Create child element "style:text-properties".
    */
    public OdfTextPropertiesElement createTextPropertiesElement(String   _aDisplay, String   _aCondition)
    {
        OdfTextPropertiesElement  _nTextProperties = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTextPropertiesElement.class);
        this.appendChild( _nTextProperties);
        return  _nTextProperties;      
    }
    
    /**
    * Create child element "number:text".
    */
    public OdfTextElement createTextElement()
    {
        OdfTextElement  _nText = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfTextElement.class);
        this.appendChild( _nText);
        return  _nText;
    }                   
               
    /**
    * Create child element "number:day".
    */
    public OdfDayElement createDayElement()
    {
        OdfDayElement  _nDay = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDayElement.class);
        this.appendChild( _nDay);
        return  _nDay;
    }                   
               
    /**
    * Create child element "number:month".
    */
    public OdfMonthElement createMonthElement()
    {
        OdfMonthElement  _nMonth = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfMonthElement.class);
        this.appendChild( _nMonth);
        return  _nMonth;
    }                   
               
    /**
    * Create child element "number:year".
    */
    public OdfYearElement createYearElement()
    {
        OdfYearElement  _nYear = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfYearElement.class);
        this.appendChild( _nYear);
        return  _nYear;
    }                   
               
    /**
    * Create child element "number:era".
    */
    public OdfEraElement createEraElement()
    {
        OdfEraElement  _nEra = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfEraElement.class);
        this.appendChild( _nEra);
        return  _nEra;
    }                   
               
    /**
    * Create child element "number:day-of-week".
    */
    public OdfDayOfWeekElement createDayOfWeekElement()
    {
        OdfDayOfWeekElement  _nDayOfWeek = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfDayOfWeekElement.class);
        this.appendChild( _nDayOfWeek);
        return  _nDayOfWeek;
    }                   
               
    /**
    * Create child element "number:week-of-year".
    */
    public OdfWeekOfYearElement createWeekOfYearElement()
    {
        OdfWeekOfYearElement  _nWeekOfYear = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfWeekOfYearElement.class);
        this.appendChild( _nWeekOfYear);
        return  _nWeekOfYear;
    }                   
               
    /**
    * Create child element "number:quarter".
    */
    public OdfQuarterElement createQuarterElement()
    {
        OdfQuarterElement  _nQuarter = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfQuarterElement.class);
        this.appendChild( _nQuarter);
        return  _nQuarter;
    }                   
               
    /**
    * Create child element "number:hours".
    */
    public OdfHoursElement createHoursElement()
    {
        OdfHoursElement  _nHours = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfHoursElement.class);
        this.appendChild( _nHours);
        return  _nHours;
    }                   
               
    /**
    * Create child element "number:am-pm".
    */
    public OdfAmPmElement createAmPmElement()
    {
        OdfAmPmElement  _nAmPm = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfAmPmElement.class);
        this.appendChild( _nAmPm);
        return  _nAmPm;
    }                   
               
    /**
    * Create child element "number:minutes".
    */
    public OdfMinutesElement createMinutesElement()
    {
        OdfMinutesElement  _nMinutes = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfMinutesElement.class);
        this.appendChild( _nMinutes);
        return  _nMinutes;
    }                   
               
    /**
    * Create child element "number:seconds".
    */
    public OdfSecondsElement createSecondsElement()
    {
        OdfSecondsElement  _nSeconds = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfSecondsElement.class);
        this.appendChild( _nSeconds);
        return  _nSeconds;
    }                   
               
    /**
    * Create child element "style:map".
    */
    public OdfMapElement createMapElement(String   _aCondition, String   _aApplyStyleName)
    {
        OdfMapElement  _nMap = ((OdfFileDom)this.ownerDocument).createOdfElement(OdfMapElement.class);
        _nMap.setCondition( _aCondition);
        _nMap.setApplyStyleName( _aApplyStyleName);
        this.appendChild( _nMap);
        return  _nMap;      
    }
    
}
