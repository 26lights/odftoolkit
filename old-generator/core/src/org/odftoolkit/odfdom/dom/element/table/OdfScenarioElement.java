/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 *
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 *
 * Use is subject to license terms.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.odftoolkit.odfdom.dom.element.table;

import org.odftoolkit.odfdom.dom.OdfName;
import org.odftoolkit.odfdom.dom.OdfNamespace;
import org.odftoolkit.odfdom.doc.OdfFileDom;
import org.odftoolkit.odfdom.dom.element.OdfElement;
import org.odftoolkit.odfdom.dom.type.OdfCellRangeAddressList;
import org.odftoolkit.odfdom.dom.type.OdfBoolean;


/**
 * ODF DOM Element implementation for element "<table:scenario>".
 */
public abstract class OdfScenarioElement extends OdfElement
{        
    /**
	 * 
	 */
	private static final long serialVersionUID = 724929968941927275L;
	public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.TABLE, "scenario" );

    public OdfScenarioElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    @Override
	public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialize mandatory attributes.
     */
    public void init(String _aScenarioRanges, Boolean _aIsActive)
    {
        setScenarioRanges( _aScenarioRanges );
        setIsActive( _aIsActive );
    }

    /**
     * Get value of attribute "table:scenario-ranges".
     */
    public String getScenarioRanges()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "scenario-ranges" ) );
        return OdfCellRangeAddressList.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:scenario-ranges".
     */
    public void setScenarioRanges( String _aScenarioRanges )
    {                    
        String aStringVal = OdfCellRangeAddressList.toString( _aScenarioRanges );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "scenario-ranges" ), aStringVal );
    }

    /**
     * Get value of attribute "table:is-active".
     */
    public Boolean getIsActive()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "is-active" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:is-active".
     */
    public void setIsActive( Boolean _aIsActive )
    {                    
        String aStringVal = OdfBoolean.toString( _aIsActive );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "is-active" ), aStringVal );
    }

    /**
     * Get value of attribute "table:display-border".
     */
    public Boolean getDisplayBorder()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "display-border" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "true";
        }

        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:display-border".
     */
    public void setDisplayBorder( Boolean _aDisplayBorder )
    {                    
        String aStringVal = OdfBoolean.toString( _aDisplayBorder );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "display-border" ), aStringVal );
    }

    /**
     * Get value of attribute "table:border-color".
     */
    public String getBorderColor()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "border-color" ) );
    }

    /**
     * Set value of attribute "table:border-color".
     */
    public void setBorderColor( String _aBorderColor )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "border-color" ), _aBorderColor );
    }

    /**
     * Get value of attribute "table:copy-back".
     */
    public Boolean getCopyBack()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "copy-back" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "true";
        }

        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:copy-back".
     */
    public void setCopyBack( Boolean _aCopyBack )
    {                    
        String aStringVal = OdfBoolean.toString( _aCopyBack );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "copy-back" ), aStringVal );
    }

    /**
     * Get value of attribute "table:copy-styles".
     */
    public Boolean getCopyStyles()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "copy-styles" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "true";
        }

        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:copy-styles".
     */
    public void setCopyStyles( Boolean _aCopyStyles )
    {                    
        String aStringVal = OdfBoolean.toString( _aCopyStyles );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "copy-styles" ), aStringVal );
    }

    /**
     * Get value of attribute "table:copy-formulas".
     */
    public Boolean getCopyFormulas()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "copy-formulas" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "true";
        }

        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:copy-formulas".
     */
    public void setCopyFormulas( Boolean _aCopyFormulas )
    {                    
        String aStringVal = OdfBoolean.toString( _aCopyFormulas );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "copy-formulas" ), aStringVal );
    }

    /**
     * Get value of attribute "table:comment".
     */
    public String getComment()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "comment" ) );
    }

    /**
     * Set value of attribute "table:comment".
     */
    public void setComment( String _aComment )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "comment" ), _aComment );
    }

    /**
     * Get value of attribute "table:protected".
     */
    public Boolean getProtected()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.TABLE, "protected" ) );
        return OdfBoolean.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "table:protected".
     */
    public void setProtected( Boolean _aProtected )
    {                    
        String aStringVal = OdfBoolean.toString( _aProtected );
        setOdfAttribute( OdfName.get( OdfNamespace.TABLE, "protected" ), aStringVal );
    }

}
