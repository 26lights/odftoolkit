/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 * 
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 * 
 * Use is subject to license terms.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.openoffice.odf.dom.element.draw;

import org.openoffice.odf.dom.OdfName;
import org.openoffice.odf.dom.OdfNamespace;
import org.openoffice.odf.doc.OdfFileDom;
import org.openoffice.odf.dom.style.OdfStyleFamily;
import org.openoffice.odf.dom.type.OdfStyleName;
import org.openoffice.odf.dom.type.OdfId;


/**
 * ODF DOM Element implementation for element "<draw:measure>".
 */
public abstract class OdfMeasureElement extends OdfShapeElementBase
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.DRAW, "measure" );

    public OdfMeasureElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialite mandatory attributes.
     */
    public void init(String _aX1, String _aY1, String _aX2, String _aY2)
    {
        setX1( _aX1 );
        setY1( _aY1 );
        setX2( _aX2 );
        setY2( _aY2 );
    }

    /**
     * Get value of attribute "svg:x1".
     */
    public String getX1()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.SVG, "x1" ) );
    }

    /**
     * Set value of attribute "svg:x1".
     */
    public void setX1( String _aX1 )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "x1" ), _aX1 );
    }

    /**
     * Get value of attribute "svg:y1".
     */
    public String getY1()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.SVG, "y1" ) );
    }

    /**
     * Set value of attribute "svg:y1".
     */
    public void setY1( String _aY1 )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "y1" ), _aY1 );
    }

    /**
     * Get value of attribute "svg:x2".
     */
    public String getX2()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.SVG, "x2" ) );
    }

    /**
     * Set value of attribute "svg:x2".
     */
    public void setX2( String _aX2 )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "x2" ), _aX2 );
    }

    /**
     * Get value of attribute "svg:y2".
     */
    public String getY2()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.SVG, "y2" ) );
    }

    /**
     * Set value of attribute "svg:y2".
     */
    public void setY2( String _aY2 )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "y2" ), _aY2 );
    }

    /**
     * Get value of attribute "draw:layer".
     */
    public String getLayer()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "layer" ) );
    }

    /**
     * Set value of attribute "draw:layer".
     */
    public void setLayer( String _aLayer )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "layer" ), _aLayer );
    }

    /**
     * Get value of attribute "draw:transform".
     */
    public String getTransform()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "transform" ) );
    }

    /**
     * Set value of attribute "draw:transform".
     */
    public void setTransform( String _aTransform )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "transform" ), _aTransform );
    }

    /**
     * Get value of attribute "draw:text-style-name".
     */
    public String getTextStyleName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "text-style-name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:text-style-name".
     */
    public void setTextStyleName( String _aTextStyleName )
    {                    
        String aStringVal = OdfStyleName.toString( _aTextStyleName );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "text-style-name" ), aStringVal );
    }

    /**
     * Get value of attribute "draw:caption-id".
     */
    public String getCaptionId()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "caption-id" ) );
        return OdfId.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:caption-id".
     */
    public void setCaptionId( String _aCaptionId )
    {                    
        String aStringVal = OdfId.toString( _aCaptionId );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "caption-id" ), aStringVal );
    }

}
