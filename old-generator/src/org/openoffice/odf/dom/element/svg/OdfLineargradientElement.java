/************************************************************************
 *
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 * 
 * Copyright 2008 Sun Microsystems, Inc. All rights reserved.
 * 
 * Use is subject to license terms.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0. You can also
 * obtain a copy of the License at http://odftoolkit.org/docs/license.txt
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ************************************************************************/

/*
 * This file is automatically generated.
 * Don't edit manually.
 */    

package org.openoffice.odf.dom.element.svg;

import org.openoffice.odf.dom.OdfName;
import org.openoffice.odf.dom.OdfNamespace;
import org.openoffice.odf.doc.OdfFileDom;
import org.openoffice.odf.dom.element.OdfElement;
import org.openoffice.odf.dom.type.svg.OdfSpreadmethodType;
import org.openoffice.odf.dom.type.OdfStyleName;


/**
 * ODF DOM Element implementation for element "<svg:linearGradient>".
 */
public abstract class OdfLineargradientElement extends OdfElement
{        
    public static final OdfName ELEMENT_NAME = OdfName.get( OdfNamespace.SVG, "linearGradient" );

    public OdfLineargradientElement( OdfFileDom _aOwnerDoc )
    {
        super( _aOwnerDoc, ELEMENT_NAME );
    }

    public OdfName getOdfName()
    {
        return ELEMENT_NAME;
    }

    /**
     * Initialite mandatory attributes.
     */
    public void init(String _aName)
    {
        setName( _aName );
    }

    /**
     * Get value of attribute "svg:gradientUnits".
     */
    public String getGradientunits()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.SVG, "gradientUnits" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "objectBoundingBox";
        }

        return String.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "svg:gradientUnits".
     */
    public void setGradientunits( String _aGradientunits )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "gradientUnits" ), _aGradientunits );
    }

    /**
     * Get value of attribute "svg:gradientTransform".
     */
    public String getGradienttransform()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.SVG, "gradientTransform" ) );
    }

    /**
     * Set value of attribute "svg:gradientTransform".
     */
    public void setGradienttransform( String _aGradienttransform )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "gradientTransform" ), _aGradienttransform );
    }

    /**
     * Get value of attribute "svg:spreadMethod".
     */
    public OdfSpreadmethodType getSpreadmethod()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.SVG, "spreadMethod" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "pad";
        }

        return OdfSpreadmethodType.enumValueOf( aStringVal);
    }

    /**
     * Set value of attribute "svg:spreadMethod".
     */
    public void setSpreadmethod( OdfSpreadmethodType _aSpreadmethod )
    {                    
        String aStringVal = OdfSpreadmethodType.toString( _aSpreadmethod );
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "spreadMethod" ), aStringVal );
    }

    /**
     * Get value of attribute "draw:name".
     */
    public String getName()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "name" ) );
        return OdfStyleName.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "draw:name".
     */
    public void setName( String _aName )
    {                    
        String aStringVal = OdfStyleName.toString( _aName );
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "name" ), aStringVal );
    }

    /**
     * Get value of attribute "draw:display-name".
     */
    public String getDisplayName()
    {
        return getOdfAttribute( OdfName.get( OdfNamespace.DRAW, "display-name" ) );
    }

    /**
     * Set value of attribute "draw:display-name".
     */
    public void setDisplayName( String _aDisplayName )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.DRAW, "display-name" ), _aDisplayName );
    }

    /**
     * Get value of attribute "svg:x1".
     */
    public String getX1()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.SVG, "x1" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "0%";
        }

        return String.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "svg:x1".
     */
    public void setX1( String _aX1 )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "x1" ), _aX1 );
    }

    /**
     * Get value of attribute "svg:y1".
     */
    public String getY1()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.SVG, "y1" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "0%";
        }

        return String.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "svg:y1".
     */
    public void setY1( String _aY1 )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "y1" ), _aY1 );
    }

    /**
     * Get value of attribute "svg:x2".
     */
    public String getX2()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.SVG, "x2" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "100%";
        }

        return String.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "svg:x2".
     */
    public void setX2( String _aX2 )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "x2" ), _aX2 );
    }

    /**
     * Get value of attribute "svg:y2".
     */
    public String getY2()
    {                    
        String aStringVal = getOdfAttribute( OdfName.get( OdfNamespace.SVG, "y2" ) );
        if( aStringVal.length()==0 )
        {
            aStringVal = "100%";
        }

        return String.valueOf( aStringVal);
    }

    /**
     * Set value of attribute "svg:y2".
     */
    public void setY2( String _aY2 )
    {
        setOdfAttribute( OdfName.get( OdfNamespace.SVG, "y2" ), _aY2 );
    }

}
