## Template to create the list of artefacts which are to be generated
##
## Documentation of template development can be found in local file
## TemplateHelp.html.
##
##
## Begin Code
#include('copyright.txt')
/*
 * This file is automatically generated.
 * Don't edit manually.
 */
package org.odftoolkit.odfdom.dom.style;

import org.odftoolkit.odfdom.dom.attribute.style.StyleFamilyAttribute;
import org.odftoolkit.odfdom.dom.style.props.OdfStyleProperty;
import java.util.Set;
import java.util.TreeSet;
import java.util.Map;
import java.util.HashMap;
##
#foreach ($styleelement in ${model.getElements().withoutMultiples()})
	#if ( $styleelement.getNamespace() == "style" && ${styleelement.getLocalName().endsWith("properties")} )
import org.odftoolkit.odfdom.dom.element.style.${model.camelCase($styleelement)}Element;
	#end
#end

public class OdfStyleFamily implements Comparable<OdfStyleFamily> {

    private String m_name;
//    private Class m_styleClass;
    private Set<OdfStyleProperty> m_properties = new TreeSet<OdfStyleProperty>();
    private static Map<String, OdfStyleFamily> m_familyByName = new HashMap<String, OdfStyleFamily>();

    public static OdfStyleFamily getByName(String name) {
        return m_familyByName.get(name);
    }

    private OdfStyleFamily(String name /*, Class styleClass*/, OdfStyleProperty[] props) {
        m_name = name;
//        m_styleClass = styleClass;
        for (OdfStyleProperty prop : props) {
            m_properties.add(prop);
        }
        m_familyByName.put(name, this);
    }

    public String getQName() {
        return m_name;
    }

    public int compareTo(OdfStyleFamily o) {
        return m_name.compareTo(o.toString());
    }  

    public static OdfStyleFamily valueOf( String name )
    {
        OdfStyleFamily family = getByName(name);
        if( family == null )
            family = new OdfStyleFamily(name,  new OdfStyleProperty[]{ null } );
        
        return family;
    }
    
    public static String toString( OdfStyleFamily family )
    {
        if( family != null )
            return family.toString();
        else
            return new String();
    }
    
    @Override
    public String toString() {
        return m_name;
    }

    public Set<OdfStyleProperty> getProperties() {
        return m_properties;
    }

#foreach ($family in ${odfmodel.getStyleFamilies()})
    public final static OdfStyleFamily ${model.camelCase($model.extractLocalname($family))} = new OdfStyleFamily("${model.extractLocalname($family)}",
            new OdfStyleProperty[]{
	#foreach ($styleelement in ${model.getElements().withoutMultiples()})
		#if ( $styleelement.getNamespace() == "style" && ${styleelement.getLocalName().endsWith("properties")} )
			#foreach ($property in ${styleelement.withMultiples().getAttributes()})
	${model.camelCase($styleelement)}Element.${model.camelCase($property)},
			#end
		#end
	#end
    });

#end
}
